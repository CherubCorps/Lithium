class Lith_PhantomAuraFX : Actor
{
   default
   {
      RenderStyle "Subtract";
      Alpha 0.6;
      Scale 0.05;
      
      +NOINTERACTION
   }
   
   states
   {
   Spawn:
      LDTH A 1 A_FadeOut(0.01);
      wait;
   }
}

class Lith_Phantom : Actor
{
   default
   {
      Species "Lith_Phantom";
      Radius 20;
      Height 56;
      Speed 4;
      RenderStyle "Stencil";
      StencilColor "Black";

      Monster;
      +NOPAIN
      +THRUSPECIES
      +DONTHARMSPECIES
      +BOSS
      +MISSILEMORE
      +NOTARGET
      +NEVERTARGET
      +DONTMORPH
   }

   int user_phase;
   int user_meleetime;

   private int m_step;

   virtual void Lith_PostInit()
   {
      CallACS("Lith_PhantomSound");
      A_PlaySound("enemies/phantom/aura", CHAN_7, 0.7, true, 0.7);
   }

   virtual void Lith_OnDeath()
   {
      CallACS("Lith_PhantomDeath");
   }

   void Lith_EmitAura()
   {
      for(int i = 0; i < 8; i++)
         A_SpawnItemEx("Lith_PhantomAuraFX", frandom(-20,20),frandom(-20,20),frandom(0,16), 0,0,frandom(0,1), 0, 0, 128);
   }

   override void Tick()
   {
      if(health > 0)
      {
         if(target && target.player && !CheckIfTargetInLOS())
            target = null;

         if(!target) for(let it = BlockThingsIterator.Create(self, 1024); it.next();)
         {
            if(it.thing && it.thing.bISMONSTER && it.thing.bCOUNTKILL &&
               !it.thing.countInv("Lith_IsPhantom"))
            {
               target = it.thing;
               SetState(ResolveState("See"));
               break;
            }
         }

         if(level.totaltime % 10 == 0)
            Lith_EmitAura();

         if(user_meleetime)
            user_meleetime--;
      }

      Super.Tick();
   }

   override void PostBeginPlay()
   {
      Super.PostBeginPlay();
      A_GiveInventory("Lith_IsPhantom", 1);
      m_step = 1;
      Lith_PostInit();
   }

   override void Die(Actor source, Actor inflictor, int dmgflags)
   {
      A_NoBlocking();
      Lith_OnDeath();
      Super.Die(source, inflictor, dmgflags);
   }

   states
   {
   Spawn:
      PLAY A 0;
      PLAY A 0 A_JumpIf(m_step == 1, "Spawn2");
      PLAY B 0 A_JumpIf(m_step == 2, "Spawn2");
      PLAY C 0 A_JumpIf(m_step == 3, "Spawn2");
      PLAY D 0 {m_step = 0;}
   Spawn2:
      PLAY # 0 {m_step++;}
      PLAY #### 1 {A_Look(); A_Wander();}
      goto Spawn;
   GetOutOfDodge:
      #### # 1 A_FadeOut(0.05);
      loop;
   Death:
      PLAY H 10;
      PLAY I 60;
      TNT1 A 70;
      stop;
   }
}

class Lith_BasicPhantom : Lith_Phantom
{
   override void Lith_PostInit() {}
   override void Lith_OnDeath () {}

   override void Tick()
   {
      if(level.totaltime % 10 == 0)
         Lith_EmitAura();

      if(user_meleetime)
         user_meleetime--;

      Super.Tick();
   }
}

// EOF
