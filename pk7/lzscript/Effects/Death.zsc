/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison Sanderson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_PlayerDeath : Lith_CustomFunction
{
   override bool TryPickup(in out Actor mo)
   {
      if(mo)
      {
         mo.A_Quake(9, 35*2, 0, 2048);
         mo.A_PlaySound("player/death2", CHAN_6, 1.0, false, ATTN_NONE);
         for(int i = 0; i < 76; i++)
            mo.A_SpawnItemEx("Lith_PlayerDeathParticle", FRandom(-32,32), FRandom(-32,32), FRandom(0, 64), FRandom(-2, 2), FRandom(-2, 2), FRandom(1, 2), 0, SXF_NOCHECKPOSITION);
      }
      return Super.TryPickup(mo);
   }
}

class Lith_PlayerDeathNuke : Lith_Nuke
{
   override bool TryPickup(in out Actor mo)
   {
      if(mo)
         for(int i = 0; i < 76; i++)
            mo.A_SpawnItemEx("Lith_PlayerDeathParticle2", FRandom(-32,32), FRandom(-32,32), FRandom(0, 64), FRandom(-16, 16), FRandom(-16, 16), FRandom(1.5, 2.5), 0, SXF_NOCHECKPOSITION);
      return Super.TryPickup(mo);
   }
}

class Lith_Nuke : Lith_CustomFunction
{
   override bool TryPickup(in out Actor mo)
   {
      if(mo)
      {
         mo.A_PlaySound("player/nuke", CHAN_7, 1.0, false, ATTN_NONE);
         mo.A_RadiusGive("Lith_Death", 6144, RGF_MONSTERS);
         mo.A_AlertMonsters();
      }
      GoAwayAndDie();
      return true;
   }
}

/* EOF */
