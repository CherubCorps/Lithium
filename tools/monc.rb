#!/usr/bin/env ruby
## Copyright Â© 2018 Alison Sanderson, all rights reserved.
## MonC: Monster info text compiler.

def proc_monster ofp, flg, lst
   ofp << "   {"
   if lst[0] =~ /[[:digit:]]/
      ofp << "#{lst.shift},#{lst.shift},"
   else
      name = lst.shift
      ofp << "Exp_#{name},Score_#{name},"
   end
   ofp << %(mtype_#{lst.shift},"#{lst.shift}")
   ofp << ", #{flg}" unless flg.empty?
   ofp << "},\n"
end

def proc_file ifp, ofp
   ofp << <<_end_
// This file was generated by monc.
// Edit only if you aren't going to recompile.

enum {
   mif_full = 1 << 0
};

static struct monster_info const monsterinfo[] = {
_end_
   flg = ""
   for ln in ifp.read.lines
      txt = ln[1..-1].chomp
      case ln[0]
      when ?%; flg = txt
      when ?+; proc_monster ofp, flg, txt.split
      end
   end
   ofp << <<_end_
};

// EOF
_end_
end

proc_file open(ARGV[0], "rt"), open(ARGV[1], "wt")

## EOF
