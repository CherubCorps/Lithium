class Lith_ItemGlow : Actor
{
   default
   {
      RenderStyle "Add";
      Alpha 0.7;
      Scale 0.1;
      Translation "Lith_ItemGlow";

      +NOINTERACTION
      +NOTIMEFREEZE
   }

   override void PostBeginPlay()
   {
      sprite = Actor.GetSpriteIndex("PBAL");

      switch(CallACS("LWData", wdata_pclass))
      {
      case pcl_marine:    frame = Ch_A - Ch_A; break;
      case pcl_cybermage: frame = Ch_C - Ch_A; break;
      case pcl_informant: frame = Ch_D - Ch_A; break;
      case pcl_wanderer:  frame = Ch_E - Ch_A; break;
      case pcl_assassin:  frame = Ch_F - Ch_A; break;
      case pcl_darklord:  frame = Ch_G - Ch_A; break;
      case pcl_thoth:     frame = Ch_H - Ch_A; break;
      default:
         sprite = Actor.GetSpriteIndex("UNKN");
         break;
      }
   }

   states
   {
   Spawn:
      #### # 5 bright;
      #### # 0 bright A_JumpIf(players[consoleplayer].camera.vec2to(self).length() > 600, "Spawn1");
      #### # 1 bright A_FadeOut(1.0 / 35.0);
      wait;
   Spawn1:
      #### # 4;
      stop;
   }
}

class Lith_WeapGlow : Lith_ItemGlow
{
   default
   {
      Translation "Lith_WeapGlow";
   }

   override void PostBeginPlay()
   {
      Super.PostBeginPlay();
      if(lith_player_brightweps) A_SetTranslation("Lith_WeapGlowBright");
   }
}

class Lith_UpgrGlow : Lith_ItemGlow
{
   default
   {
      Translation "None";
   }
}

class Lith_Pickup : CustomInventory;

default
{
   Inventory.PickupMessage "";
   Inventory.PickupSound "";
   Lith_Pickup.Sprite "UNKNA";
}

private meta bool m_generic;

private meta string m_sprGf;
private meta string m_sprMf;
private meta string m_sprCf;

private int m_gla;
private int m_glz;

private Actor m_spr;

private Lith_Sprite m_sprG;
private Lith_Sprite m_sprM;
private Lith_Sprite m_sprC;

private class<Actor> m_glow;

property Sprite:  m_sprGf;
property SpriteM: m_sprMf;
property SpriteC: m_sprCf;
property Generic: m_generic;
property Glow:    m_glow;

const Lith_ISF = SXF_TRANSFERSPRITEFRAME | SXF_SETMASTER;

override void PostBeginPlay()
{
   if(m_sprGf) m_sprG.get(m_sprGf);
   if(m_sprMf) m_sprM.get(m_sprMf);
   if(m_sprCf) m_sprC.get(m_sprCf);

   m_spr = Spawn("Lith_ItemSprite", pos);
   m_spr.master = self;
}

override void Tick()
{
   Super.Tick();

   if(!m_spr) return;

   if(m_generic)
   {
      Lith_SetSprite(m_sprG);
      return;
   }

   if(!players[consoleplayer].camera)
      return;

   let p = players[consoleplayer].camera;
        if(p is "Lith_MarinePlayer")    Lith_SetSprite(m_sprM);
   else if(p is "Lith_CyberMagePlayer") Lith_SetSprite(m_sprC);
   else                                 Lith_SetSprite(m_sprG);
}

void Lith_SetSprite(Lith_Sprite s)
{
   m_spr.sprite = s.spr;
   m_spr.frame  = s.frm;
}

void Lith_ItemGlow()
{
   m_gla = (m_gla + 5) % 360;
   m_glz = (m_glz + 2) % 360;

   if(!lith_player_noitemfx && players[consoleplayer].camera.checksight(self, SF_IGNOREVISIBILITY|SF_SEEPASTSHOOTABLELINES|SF_SEEPASTBLOCKEVERYTHING))
   {
      double sa = sin(m_gla);
      double sz = sin(m_glz);
      double ca = cos(m_gla);

      A_SpawnItemEx(m_glow,      sa  * 32,      ca  * 32,      24 + sz *  9);
      A_SpawnItemEx(m_glow,             0,      sa  * 32,      24 + ca * 32);
      A_SpawnItemEx(m_glow,      ca  * 32,      sa  * 32,      24 + sa * 32);
      A_SpawnItemEx(m_glow,      ca  * 32, (1 - sa) * 32 - 32, 24 + sa * 32);
      A_SpawnItemEx(m_glow,      sa  * 32,                  0, 24 + ca * 32);
      A_SpawnItemEx(m_glow,      sa  * 32,      ca  * 32,      24 + sa * 32);
      A_SpawnItemEx(m_glow, (1 - sa) * 32 - 32, ca  * 32,      24 + sa * 32);
   }
}

states {
SpawnLoop: TNT1 A 1 {invoker.Lith_ItemGlow();} loop;
}

// EOF
