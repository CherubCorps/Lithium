actor Lith_WeaponPickup : CustomInventory
{
   Inventory.PickupSound ""
   Inventory.PickupMessage ""
   
   +INVENTORY.ALWAYSPICKUP
   
   var int user_glowangle;
   var int user_glowzangle;
   var int user_pickupparm;
   
   states
   {
   Spawn:
      "####" "#" 0
      "####" "#" 0 A_SpawnItemEx("Lith_ItemSprite", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSPRITEFRAME|SXF_SETMASTER)
   SpawnLoop:
      TNT1 A 1 A_CheckSight("LoopButDontShowThatShitOffDawg")
      TNT1 A 0 A_SetUserVar(user_glowangle,  (user_glowangle  + 5) % 360)
      TNT1 A 0 A_SetUserVar(user_glowzangle, (user_glowzangle + 2) % 360)
      
      // xyz
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", sin(user_glowangle) * 32.0,
                                                cos(user_glowangle) * 32.0,
                                                24.0 + (sin(user_glowzangle) * 9.0),
                                                0, 0, 0, 0)
      
      // yz
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", 0,
                                                sin(user_glowangle) * 32.0,
                                                24.0 + (cos(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", cos(user_glowangle) * 32.0,
                                                sin(user_glowangle) * 32.0,
                                                24.0 + (sin(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", cos(user_glowangle) * 32.0,
                                                ((1.0 - sin(user_glowangle)) * 32.0) - 32.0,
                                                24.0 + (sin(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      
      // xz
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", sin(user_glowangle) * 32.0,
                                                0,
                                                24.0 + (cos(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", sin(user_glowangle) * 32.0,
                                                cos(user_glowangle) * 32.0,
                                                24.0 + (sin(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      TNT1 A 0 A_SpawnItemEx("Lith_ItemGlow", ((1.0 - sin(user_glowangle)) * 32.0) - 32.0,
                                                cos(user_glowangle) * 32.0,
                                                24.0 + (sin(user_glowangle) * 32.0),
                                                0, 0, 0, 0)
      loop
   LoopButDontShowThatShitOffDawg:
      TNT1 A 1
      TNT1 A 0 A_CheckSight("LoopButDontShowThatShitOffDawg")
      goto SpawnLoop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteWithResult("Lith_WeaponPickup", weapon_fist)
      stop
   }
}

actor Lith_Weapon : Weapon
{
   Weapon.BobStyle "Alpha"
   Weapon.BobSpeed 1.5
   Inventory.PickupSound ""
   Inventory.PickupMessage ""
   
   +INVENTORY.UNTOSSABLE // This is actually handled correctly but unfortunately fuck you.
   +WEAPON.NOALERT
   
   const int Lith_BOBONLY = WRF_NOSWITCH | WRF_NOFIRE;
   
   // These flags are used for spawning pickup actors.
   // UDMF maps have a surprising amount of control over things, so we have
   // to use a load of flags to make this work properly.
   const int Lith_PF = SXF_TRANSFERTRANSLATION | SXF_TRANSFERAMBUSHFLAG |
      SXF_TRANSFERPITCH | SXF_TRANSFERPOINTERS | SXF_TRANSFERSCALE |
      SXF_TRANSFERSPECIAL | SXF_TRANSFERSTENCILCOL | SXF_TRANSFERALPHA |
      SXF_TRANSFERRENDERSTYLE | SXF_TRANSFERSPRITEFRAME | SXF_TRANSFERROLL;
   
   states
   {
   DummyFlash:
      TNT1 A 0 A_AlertMonsters
      stop
   
   User4:
      "####" "#" 3 offset(2, 34)
      "####" "#" 1 offset(5, 41)
      "####" "#" 1 offset(10, 58)
      "####" "#" 1 offset(17, 87)
      TNT1 A 0 offset(1, 32) A_JumpIfInventory("Lith_Knif", 1, "_Knife1")
      KNIF A 1 A_PlaySound("weapons/knife/swing1", CHAN_WEAPON)
      KNIF BCD 1
      goto _KnifeNormal
   _Knife1:
      TNT1 A 1 A_PlaySound("weapons/knife/swing2", CHAN_WEAPON)
      KNIF FGH 1
   _KnifeNormal:
      TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "_KnifeBerserk")
      TNT1 A 0 A_CustomPunch(5  * random(1, 10), true, CPF_NOTURN, "Lith_KnifPuf", 96)
      goto _KnifeEnd1
   _KnifeBerserk:
      TNT1 A 0 A_CustomPunch(20 * random(1, 10), true, CPF_NOTURN, "Lith_KnifPuf", 96)
      goto _KnifeEnd1
   _KnifeEnd1:
      TNT1 A 0 A_JumpIfInventory("Lith_Knif", 1, "_KnifeEnd2")
      KNIF E 1
      TNT1 A 1
      goto _KnifeEnd
   _KnifeEnd2:
      KNIF IJ 1
   _KnifeEnd:
      TNT1 A 5
      TNT1 A 0 A_JumpIfInventory("Lith_Knif", 1, "_KnifeDone")
      TNT1 A 0 A_GiveInventory("Lith_Knif", 1)
      TNT1 AAAAA 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_NOSWITCH|WRF_ALLOWUSER4)
      TNT1 A 0 A_TakeInventory("Lith_Knif", 1)
      goto _KnifeFinish
   _KnifeDone:
      TNT1 A 0 A_TakeInventory("Lith_Knif", 1)
      TNT1 AAAAA 1 A_WeaponReady(WRF_NOBOB|WRF_NOFIRE|WRF_NOSWITCH|WRF_ALLOWUSER4)
   _KnifeFinish:
      TNT1 AAAAAAAAA 0 A_Lower
      TNT1 A 1
      TNT1 A 0 A_Jump(256, "Select")
   }
}

