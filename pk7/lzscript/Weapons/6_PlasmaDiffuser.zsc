// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_DiffPlasma : Lith_PlasmaBolt
{
   default
   {
      DamageFunction 8 * Random(6,9);
      DeathSound "weapons/plasdiff/explode";
      Speed 25;
   }

   states
   {
   Spawn:
      TNT1 A 0;
   Trail:
      TNT1 A 0 A_JumpIf(m_TrailStep >= 5, "TrailDone");
      TNT1 A 0 {
         m_TrailStep++;
         A_SpawnItemEx("Lith_PlasmaBoltTrail_Blue", m_TrailStep * 10. * Vel.X / -35., -(m_TrailStep * 10. * Vel.Y) / -35., 2. + m_TrailStep * 10. * Vel.Z / -35., flags: SXF_ABSOLUTEANGLE | SXF_NOCHECKPOSITION);
      }
      loop;
   TrailDone:
      TNT1 A 0 {m_TrailStep = 0;}
      goto Step;
   Step:
      TNT1 A 1 light("Lith_PlasmaPistolLight");
      TNT1 A 0 ResolveState("Trail");
   Death:
      PLSE A 4 bright light("Lith_PlasmaPistolLight") {
         for(int i = 0; i < 4; i++)
            A_SpawnParticle("Blue", SPF_FULLBRIGHT, 15, 4, 0, FRandom(-5, 5),FRandom(-5, 5),FRandom(-5, 5), FRandom(-5, 5),FRandom(-5, 5),FRandom(-5, 5));
      }
      PLSE BCDE 4 bright light("Lith_PlasmaPistolLight");
      stop;
   }
}

class Lith_PlasmaDiffuser : Lith_OutcastsWeapon;

default
{
   Tag "Plasma Diffuser";
   Weapon.SlotNumber 6;
   Weapon.SlotPriority 0.9;
   Weapon.UpSound "weapons/plasdiff/draw";

   +WEAPON.CHEATNOTWEAPON
}

action(Weapon) void Lith_A_FirePlasmaDiff()
{
   A_TakeInventory("Lith_PlasmaAmmo", 60, TIF_NOTAKEINFINITE);
   A_GunFlash("DummyFlash");
   A_PlaySound("weapons/plasdiff/fire", CHAN_WEAPON);
   A_FireProjectile("Lith_DiffPlasma", 0, false, 0, -9);
   A_FireProjectile("Lith_LightProjectileSkyShort", 0);
}

states(Weapon)
{
Ready:
   PDFG A 1 Lith_A_Ready;
   loop;

Deselect:
   PDFG AA 0 A_Lower;
   PDFG A 1 A_Lower;
   loop;

Select:
   PDFG AA 0 A_Raise;
   PDFG A 1 A_Raise;
   loop;

Fire:
   PDFG A 0 A_JumpIf(CountInv("Lith_PlasmaAmmo") == 0, "FireEmpty");
   PDFG B 1 offset(0, 40) bright {Lith_A_FirePlasmaDiff(); return A_Jump(128, 2);}
   PDFG A 0 ResolveState(2);
   PDFG C 1 offset(0, 40) bright;
   PDFG # 3 offset(0, 35) bright;
   PDFG A 1 offset(0, 34) bright A_ReFire;
   PDFG A 1 offset(0, 32) A_ReFire;
   goto ReadySelector;
FireEmpty:
   #### # 0 A_StopSound(CHAN_7);
   #### # 0 A_StopSound(CHAN_6);
   #### # 1 A_PlaySound("weapons/plasdiff/empty", CHAN_7);
   #### # 1 offset(0, 37);
   #### # 1 offset(0, 36);
   #### # 1 offset(0, 35);
   #### # 1 offset(0, 34);
   #### # 1 offset(0, 32);
   #### # 1 A_ReFire;
   goto ReadySelector;
}

// EOF
