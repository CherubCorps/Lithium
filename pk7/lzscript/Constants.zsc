#include "lzscript/Headers/lith_weapons.h"
#include "lzscript/Headers/lith_pdata.h"
#include "lzscript/Headers/lith_wdata.h"
#include "lzscript/Headers/lith_upgradenames.h"
#include "lzscript/Headers/lith_scorenums.h"

enum Lith_ASCII
{
   Ch_NUL, // null
   Ch_SOH, // start of heading
   Ch_STX, // start of text
   Ch_ETX, // end of text
   Ch_EOT, // end of transmission
   Ch_ENQ, // enquiry
   Ch_ACK, // acknowledge
   Ch_BEL, // bell
   Ch_BS,  // backspace
   Ch_TAB, // horizontal tab
   Ch_LF,  // line feed
   Ch_VT,  // vertical tab
   Ch_FF,  // form feed
   Ch_CR,  // carriage return
   Ch_SO,  // shift out
   Ch_SI,  // shift in
   Ch_DLE, // data link escape
   Ch_DC1, // device control 1
   Ch_DC2, // device control 2
   Ch_DC3, // device control 3
   Ch_DC4, // device control 4
   Ch_NAK, // negative acknowledge
   Ch_SYN, // synchronous idle
   Ch_ETB, // end of transmission block
   Ch_CAN, // cancel
   Ch_EM,  // end medium
   Ch_SUB, // substitute
   Ch_ESC, // escape
   Ch_FS,  // file separator
   Ch_GS,  // group separator
   Ch_RS,  // record separator
   Ch_US,  // unit separator

   Ch_Space,       // ' '
   Ch_Bang,        // !
   Ch_DblQuote,    // "
   Ch_Hash,        // #
   Ch_Dollar,      // $
   Ch_Percent,     // %
   Ch_And,         // &
   Ch_Quote,       // '
   Ch_ParenO,      // (
   Ch_ParenC,      // )
   Ch_Asterisk,    // *
   Ch_Plus,        // +
   Ch_Comma,       // ,
   Ch_Minus,       // -
   Ch_Period,      // .
   Ch_Slash,       // /
   Ch_0,           // 0
   Ch_1,           // 1
   Ch_2,           // 2
   Ch_3,           // 3
   Ch_4,           // 4
   Ch_5,           // 5
   Ch_6,           // 6
   Ch_7,           // 7
   Ch_8,           // 8
   Ch_9,           // 9
   Ch_Colon,       // :
   Ch_Semicolon,   // ;
   Ch_LessThan,    // <
   Ch_Equals,      // =
   Ch_MoreThan,    // >
   Ch_Question,    // ?
   Ch_At,          // @
   Ch_A,           // A
   Ch_B,           // B
   Ch_C,           // C
   Ch_D,           // D
   Ch_E,           // E
   Ch_F,           // F
   Ch_G,           // G
   Ch_H,           // H
   Ch_I,           // I
   Ch_J,           // J
   Ch_K,           // K
   Ch_L,           // L
   Ch_M,           // M
   Ch_N,           // N
   Ch_O,           // O
   Ch_P,           // P
   Ch_Q,           // Q
   Ch_R,           // R
   Ch_S,           // S
   Ch_T,           // T
   Ch_U,           // U
   Ch_V,           // V
   Ch_W,           // W
   Ch_X,           // X
   Ch_Y,           // Y
   Ch_Z,           // Z
   Ch_BrackO,      // [
   Ch_Backslash,   // \
   Ch_BrackC,      // ]
   Ch_Exponent,    // ^
   Ch_Underscore,  // _
   Ch_Grave,       // `
   Ch_L_A,         // a
   Ch_L_B,         // b
   Ch_L_C,         // c
   Ch_L_D,         // d
   Ch_L_E,         // e
   Ch_L_F,         // f
   Ch_L_G,         // g
   Ch_L_H,         // h
   Ch_L_I,         // i
   Ch_L_J,         // j
   Ch_L_K,         // k
   Ch_L_L,         // l
   Ch_L_M,         // m
   Ch_L_N,         // n
   Ch_L_O,         // o
   Ch_L_P,         // p
   Ch_L_Q,         // q
   Ch_L_R,         // r
   Ch_L_S,         // s
   Ch_L_T,         // t
   Ch_L_U,         // u
   Ch_L_V,         // v
   Ch_L_W,         // w
   Ch_L_X,         // x
   Ch_L_Y,         // y
   Ch_L_Z,         // z
   Ch_BraceO,      // {
   Ch_VerticalBar, // |
   Ch_BraceC,      // }
   Ch_Tilde,       // ~
   Ch_DEL,         // DEL

   Ch_Color = Ch_FS,
}

const IFIX = 32768;
const  FIX = 32768.0;

const AmmoAmt_Bullet       = 10;
const AmmoAmt_BulletBox    = 50;
const AmmoAmt_Shell        = 4;
const AmmoAmt_ShellBox     = 20;
const AmmoAmt_Rocket       = 1;
const AmmoAmt_RocketBox    = 5;
const AmmoAmt_Cell         = 500;
const AmmoAmt_CellPack     = 1500;
const AmmoAmt_CannonPack   = 4;

const AmmoAmt_BulletBackpk = 10;
const AmmoAmt_ShellBackpk  = 4;
const AmmoAmt_RocketBackpk = 1;
const AmmoAmt_CellBackpk   = 1500;
const AmmoAmt_CannonBackpk = 4;

// EOF
