/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison Sanderson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_Revolver : Lith_MWeapon;

default
{
   Tag "$LITH_INFO_SHORT_Revolver";
   Weapon.SlotNumber 2;
   Weapon.SlotPriority 0.9;
   Weapon.BobSpeed 2.5;
   Weapon.BobRangeX 0.2;
   Weapon.BobRangeY 0.3;
   Weapon.UpSound "weapons/revolver/draw";
   Lith_Weapon.MagSize 6;

   +WEAPON.NOAUTOFIRE
}

action(Weapon) void Lith_A_FireRevolver()
{
   Lith_A_MagIncr();
   A_GunFlash("DummyFlash");
   Lith_FireBullets(0, 0, -1, 45);
   Lith_A_GunSmokeSmall();
   Lith_A_RecoilUp(0.75);
   A_PlaySound("weapons/revolver/fire", CHAN_WEAPON);
   A_FireProjectile("Lith_LightProjectileRedShort", 0);
}

states(Weapon)
{
Ready:
   REVO A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;

Deselect:
   REVO AAA 0 A_Lower;
   REVO A 1;
   loop;
Select:
   REVO AAA 0 A_Raise;
   REVO A 1;
   loop;

Fire:
   REVO A 0 Lith_A_JumpIfMagEmpty;
   REVO B 1 bright Lith_A_FireRevolver;
   REVO C 1 bright Lith_A_RecoilDn(0.25);
   REVO D 1 bright Lith_A_RecoilDn(0.25);
   REVO E 2 Lith_A_RecoilDn(0.25);
   REVO FD 2;
   REVO AAA 1 A_WeaponReady(WRF_ALLOWRELOAD);
   goto ReadySelector;

FireEmpty:
   #### # 1;
   #### # 1 offset(0, 45);
   #### # 1 offset(0, 43);
   #### # 1 offset(0, 40) A_PlaySound("weapons/ionrifle/empty", CHAN_7);
   #### # 1 offset(0, 38);
   #### # 1 offset(0, 36);
   #### # 1 offset(0, 33);
   #### # 1 offset(0, 32);
   #### # 2;
   goto ReadySelector;

Reload:
   #### # 0 Lith_A_JumpIfMagFull;
   REVO A 1 offset(0, 33) A_PlaySound("weapons/revolver/reload", CHAN_7);
   REVO A 1 offset(0, 34);
   REVO A 1 offset(0, 35) Lith_A_ReloadBobDn(0.1);
   REVO A 1 offset(-1, 37) Lith_A_ReloadBobDn(0.1);
   REVO A 1 offset(-4, 40) Lith_A_ReloadBobDn(0.1);
   REVO G 1 offset(-7, 42) Lith_A_ReloadBobDn(0.1);
   REVO G 1 offset(-9, 48) Lith_A_ReloadBobDn(0.1);
   REVO H 1 offset(-11, 50) {
      Lith_A_ReloadBobDn(0.1);
      for(int i = 0; i < invoker.m_Fired; i++)
         Lith_A_Casing("Lith_CasSmall", 10, frandom(-1,1), 44, frandom(1,2), frandom(1,3), 0);
   }
   REVO H 1 offset(-12, 55) Lith_A_ReloadBobDn(0.1);
   REVO I 1 offset(-13, 64);
   REVO I 1 offset(-13, 69);
   TNT1 A 16;
   TNT1 A 2 Lith_A_ReloadBobUp(0.5);
   TNT1 A 2 Lith_A_ReloadBobUp(0.5);
   REVO J 1 offset(2, 64) {
      Lith_A_ReloadFinish();
      Lith_A_ReloadBobUp(0.3);
   }
   REVO J 1 offset(2, 55) Lith_A_ReloadBobUp(0.2);
   REVO K 1 offset(2, 50);
   REVO K 1 offset(2, 45);
   REVO K 1 offset(1, 40);
   REVO A 1 offset(1, 35);
   REVO A 1 offset(1, 33);
   REVO A 1 offset(1, 32);
   goto ReadySelector;
}

/* EOF */
