// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_BarrierFX : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.3;

      +NOTIMEFREEZE
      +NOINTERACTION
   }

   states
   {
   Spawn:
      TNT1 A 0;
      LBAR A 10 A_PlaySound("player/barrier", CHAN_NOPAUSE|CHAN_LISTENERZ);
      LBAR A 1 {Scale *= 0.86; Alpha -= 0.25; if(Alpha <= 0) Destroy();}
      wait;
   }
}

class Lith_HasBarrier : Powerup
{
   default
   {
      Powerup.Duration -30;
      Powerup.Color "C3 DF E8", 0.1;
   }

   override void Tick()
   {
      if(!GlobalFreeze && !Level.Frozen)
      {
         Actor th;
         for(let it = ThinkerIterator.Create("Actor"); (th = Actor(it.Next()));)
            if(th.bMISSILE && th.Target && th.Target.bCOUNTKILL && !th.IsZeroDamage() &&
               th.GetMissileDamage(7, 1) < 80 && Random(0, 256) < 80 &&
               th.Vec3To(Owner).Length() <= 64)
         {
            Spawn("Lith_BarrierFX", th.Pos);
            th.Destroy();
         }
         Super.Tick();
      }
   }
}

class Lith_BlurSphere : Lith_CustomInventory;

default
{
   //$Category "Powerups"

   Tag "Fragma";
   Inventory.PickupSound "player/pickup/barrier";
   Lith_CustomInventory.InfoPage "Fragma";

   +COUNTITEM
   +INVENTORY.BIGPOWERUP
   +INVENTORY.FANCYPICKUPSOUND
   +INVENTORY.ALWAYSPICKUP
}

states(Actor)
{
Spawn:
   TNT1 A 0;
   TNT1 A 0 A_SpawnItemEx("Lith_BlurSphereSprite", flags: SXF_SETMASTER);
   TNT1 A 1;
   wait;
}

states(Item)
{
Pickup:
   TNT1 A 0 Lith_A_Log(msg_both, 5, "BlurSphere");
   TNT1 A 0 A_TakeInventory("Lith_HasBarrier", 1);
   TNT1 A 0 A_GiveInventory("Lith_HasBarrier", 1);
   stop;
}

// EOF
