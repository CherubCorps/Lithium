// Distributed under the CC0 public domain license.
// By Alison Sanderson. Attribution is encouraged, though not required.
// See licenses/cc0.txt for more information.

class Lith_RifleLaserTrail : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.14;

      +NOINTERACTION
      +NOTIMEFREEZE
   }

   states
   {
   Spawn:
      BLLT E 5 bright;
   SpawnLoop:
      BLLT E 1 bright A_SetScale(scale.x - 0.035);
      BLLT E 0 bright A_JumpIf(scale.x < 0.05, "Null");
      loop;
   }
}

class Lith_LaserRiflePuff : Actor
{
   default
   {
      DamageType "Electric";

      +ALWAYSPUFF
      +FORCEDECAL
   }
}

class Lith_CombatRifleMagazine : Lith_DroppedMagazine
{
   default
   {
      Scale 0.7;
   }

   states
   {
   Spawn1:
      MGZR ABCD 3 {user_side = 0;}
      MGZR EFGH 3 {user_side = 1;}
      loop;
   Death:
      MGZR C 0 A_JumpIf(user_side == 0, "Done");
      MGZR G 0 A_JumpIf(user_side == 1, "Done");
      stop;
   }
}

class Lith_CombatRifleMagazine2 : Lith_CombatRifleMagazine
{
   default
   {
      BounceSound "weapons/magbouncef";
      Mass 145;
   }

   states
   {
   Spawn1:
      MGZR IJKL 3 {user_side = 0;}
      MGZR MNOP 3 {user_side = 1;}
      loop;
   Death:
      MGZR K 0 A_JumpIf(user_side == 0, "Done");
      MGZR O 0 A_JumpIf(user_side == 1, "Done");
      stop;
   }
}

class Lith_CombatRifle : Lith_MWeapon;

default
{
   Lith_Weapon.MagSize 40;
   Tag "Combat Rifle";
   Weapon.SlotNumber 4;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/rifle/draw";

   +WEAPON.NOAUTOAIM
}

int  m_Burst;
bool m_GrenFire;

action(Weapon) void Lith_A_FireRifle()
{
   Lith_A_MagIncr();
   A_GunFlash("DummyFlash");
   Lith_A_RecoilUp(0.4);
   if(!ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_LaserRCW))
   {
      if(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_7777777))
         A_PlaySound("marathon/rifle/fire", CHAN_WEAPON);
      else
      {
         let ro1 = CallACS("Lith_AmmoRunOut", false)/FIX;
         let ro2 = CallACS("Lith_AmmoRunOut", true) /FIX;
         A_PlaySound("weapons/rifle/fire",   CHAN_WEAPON, ro1);
         A_PlaySound("weapons/rifle/firero", CHAN_7,      ro2);
      }

      if(random(0, 256) < 128)
         Lith_FireBullets(5.77, 2, -1, 1, FBF_NORANDOM, "Lith_RifleBullet");
      else for(int i = 0; i < 2; i++)
         Lith_FireBullets(5.77, 2, -1, 1, FBF_NORANDOM, "Lith_RifleBulletPainless");
   }
   else
   {
      A_PlaySound("weapons/rcw/fire", CHAN_WEAPON);

      for(int i = 0; i < 2; i++) {
         A_RailAttack(8, 0, true, "", "Red", RGF_SILENT|RGF_FULLBRIGHT, 0, "Lith_LaserRiflePuff", 5.77, 3, 0, 0, 4, 0, "Lith_RifleLaserTrail", 0);
      }
   }
}

action(Weapon) void Lith_A_FireRifleBurst()
{
   Lith_A_MagIncr();
   A_GunFlash("DummyFlash");
   for(int i = 0; i < 2; i++)
   {
      if(!ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_LaserRCW))
      {
         A_PlaySound("weapons/rifle/firesnipe", CHAN_WEAPON);
         Lith_FireBullets(1, 1, -3, 1, FBF_NORANDOM, "Lith_RifleBullet");
      }
      else
      {
         A_PlaySound("weapons/rcw/firesnipe", CHAN_WEAPON);
         A_RailAttack(8, 0, true, "", "Red", RGF_SILENT|RGF_FULLBRIGHT, 0, "Lith_LaserRiflePuff", 2, 2, 0, 0, 4, 0, "Lith_RifleLaserTrail", 0);
      }
   }
}

action(Weapon) void Lith_A_FireRifleGrenade()
{
   invoker.m_GrenFire = true;
   if(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_7777777))
      A_PlaySound("marathon/rifle/grenade", CHAN_WEAPON);
   else
      A_PlaySound("weapons/rifle/grenade", CHAN_WEAPON);
   A_AlertMonsters();
   A_FireProjectile("Lith_RifleGrenade");
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_ChaingunPickup");
   stop;
}

states(Weapon)
{
Ready:
   CRFG A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   loop;

Deselect:
   CRFG AA 0 A_Lower;
   CRFG A 1 A_Lower;
   loop;

Select:
   CRFG A 0 ACS_ScriptCall("Lith_ResetRifleMode");
SelectLoop:
   CRFG AA 0 A_Raise;
   CRFG A 1 A_Raise;
   loop;

Fire:
   CRFG A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_riflemode) == rifle_firemode_burst,   "FireBurstStart");
   CRFG A 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_riflemode) == rifle_firemode_grenade, "FireGrenade");
   CRFG A 0 Lith_A_JumpIfMagEmpty;
   CRFG B 1 bright Lith_A_FireRifle;
   CRFG C 1 bright Lith_A_RecoilDn(0.35);
   CRFG A 1 Lith_A_RecoilDn(0.2);
   CRFG A 0 Lith_A_RecoilDn(0.4);
   CRFG AAAAAA 1 A_ReFire;
   goto ReadySelector;
FireBurstStart:
   #### # 0 {invoker.m_Burst = 5;}
FireBurst:
   #### # 0 Lith_A_JumpIfMagEmpty;
   CRFG B 1 bright Lith_A_FireRifleBurst;
   CRFG C 1 bright;
   CRFG C 1;
   CRFG A 0 A_JumpIf(--invoker.m_Burst == 0, "FireBurstDone");
   loop;
FireBurstDone:
   CRFG A 4;
   CRFG A 2 A_JumpIf(!ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_LaserRCW), 2);
   CRFG AAAAAA 1 A_Refire;
   goto ReadySelector;
FireGrenade:
   #### # 0 A_JumpIf(invoker.m_GrenFire, "GrenadeReload");
   CRFG G 2 bright Lith_A_FireRifleGrenade;
   CRFG H 2 bright;
   CRFG I 2 bright;
   CRFG A 5;
   CRFG A 1 A_ReFire;
   goto ReadySelector;
GrenadeReload:
   CRFG A 1 offset(1, 32) {
      if(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_7777777))
         A_PlaySound("marathon/rifle/reload", CHAN_6);
      else
         A_PlaySound("weapons/rifle/rldmount", CHAN_6);
   }
   CRFG A 1 offset(3, 32);
   CRFG A 1 offset(4, 32);
   CRFG A 1 offset(8, 38);
   CRFG A 1 offset(12, 45);
   CRFG A 1 offset(16, 53);
   CRFG A 1 offset(19, 60);
   CRFG A 1 offset(21, 64) Lith_A_ReloadBobDn(0.1);
   CRFG A 1 offset(23, 67) Lith_A_ReloadBobDn(0.1);
   CRFG A 1 offset(22, 69) Lith_A_ReloadBobDn(0.1);
   CRFG A 1 offset(19, 70) Lith_A_ReloadBobDn(0.1);
   CRFG A 7 offset(18, 72) Lith_A_ReloadBobDn(0.1);
   CRFG A 1 offset(17, 69);
   CRFG A 1 offset(19, 67);
   CRFG A 1 offset(20, 66);
   CRFG A 1 offset(21, 62) Lith_A_ReloadBobUp(0.4);
   CRFG A 1 offset(20, 60) {Lith_A_ReloadBobUp(0.4); invoker.m_GrenFire = false;}
   CRFG A 1 offset(21, 63);
   CRFG A 1 offset(23, 66);
   CRFG A 1 offset(24, 68);
   CRFG A 1 offset(25, 63);
   CRFG A 1 offset(24, 59);
   CRFG A 1 offset(22, 57);
   CRFG A 1 offset(20, 54);
   CRFG A 1 offset(16, 49);
   CRFG A 1 offset(12, 44);
   CRFG A 1 offset(10, 42);
   CRFG A 1 offset(8, 40);
   CRFG A 1 offset(5, 38);
   CRFG A 1 offset(2, 35);
   CRFG A 8 offset(0, 32);
   goto ReadySelector;

FireEmpty:
   #### # 1;
   #### # 1 offset(0, 45);
   #### # 1 offset(0, 43);
   #### # 1 offset(0, 40) A_PlaySound("weapons/empty", CHAN_7);
   #### # 1 offset(0, 38);
   #### # 1 offset(0, 36);
   #### # 1 offset(0, 33);
   #### # 1 offset(0, 32);
   #### # 2;
   goto ReadySelector;

AltFire:
   #### # 0 A_JumpIf(ACS_ExecuteWithResult(lsc_pdata, pdata_upgrade, UPGR_RifleModes), "SwitchMode");
   goto FireGrenade;
SwitchMode:
   CRFG A 0 ACS_ScriptCall("Lith_SwitchRifleFiremode", 0);
   CRFG A 0 Lith_A_ReloadBobDn(0.1);
   CRFG DEF 1;
   CRFG A 9 A_WeaponReady(WRF_NOSECONDARY);
   goto ReadySelector;

Reload:
   #### # 0 Lith_A_JumpIfMagFull;
   CRFG K 1;
   CRFG J 1 offset(-2, 34);
   CRFG J 1 offset(-4, 37);
   CRFG J 0 Lith_A_ReloadBobUp(0.1);
   CRFG J 1 offset(-9, 43) A_PlaySound("weapons/rifle/reloadout", CHAN_6);
   CRFG J 1 offset(-12, 47) Lith_A_ReloadBobUp(0.1);
   CRFG J 0 Lith_A_ReloadBobUp(0.1);
   CRFG J 1 offset(-14, 52) Lith_A_DropMag("Lith_CombatRifleMagazine", "Lith_CombatRifleMagazine2", 9,0,20, frandom(0,1),frandom(-1,-4),0);
   CRFG J 0 Lith_A_ReloadBobUp(0.1);
   CRFG J 2 offset(-12, 55);
   CRFG J 3 offset(-11, 57);
   CRFG J 8 offset(-10, 60);
   CRFG J 8 offset(-11, 60);
   CRFG J 0 Lith_A_ReloadFinish;
   CRFG J 0 Lith_A_ReloadBobDn(0.1);
   CRFG J 2 offset(-13, 59) A_PlaySound("weapons/rifle/reloadin", CHAN_7);
   CRFG J 2 offset(-11, 49) Lith_A_ReloadBobDn(0.7);
   CRFG J 2 offset(-11, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 7 offset(-11, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(-12, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(-8, 53) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(-1, 57) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(3, 56) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(8, 52) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(10, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(8, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 1 offset(7, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 2 offset(5, 43) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   CRFG A 2 offset(3, 40) A_WeaponReady(WRF_NOBOB);
   CRFG A 3 offset(2, 39) A_WeaponReady(WRF_NOBOB);
   CRFG A 3 offset(1, 37) A_WeaponReady(WRF_NOBOB);
   CRFG A 4 offset(1, 34) A_WeaponReady(WRF_NOBOB);
   CRFG A 4 A_WeaponReady(WRF_NOBOB);
   goto ReadySelector;
}

// EOF
