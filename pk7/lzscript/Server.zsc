class Lith_Server : Actor
{
   bool GrabInput[MAXPLAYERS];
   bool Paused;
   
   static void SetInput(int pnum, bool on)
   {
      let sv = Instance();
      if(sv) sv.GrabInput[pnum % MAXPLAYERS] = on;
   }

   static int GetMaxAmmo(int pnum, string cname)
   {
      if(!playeringame[pnum] || players[pnum].mo == null) return 0;
      let p = players[pnum].mo;
      let wep = Lith_Weapon(p.inv.findInventory(cname));
      if(wep) return wep.lith_max;
      return 0;
   }

   static int GetCurAmmo(int pnum, string cname)
   {
      if(!playeringame[pnum] || players[pnum].mo == null) return 0;
      let p = players[pnum].mo;
      let wep = Lith_Weapon(p.inv.findInventory(cname));
      if(wep) return wep.lith_fired;
      return 0;
   }

   static clearscope Lith_Server Instance()
   {
      return Lith_Server(ThinkerIterator.Create("Lith_Server").Next());
   }
}

// EOF

