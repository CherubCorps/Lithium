actor Lith_WeaponGlow
{
   RenderStyle "Add"
   Alpha 0.7
   Scale 0.1
   Translation "0:255=%[0,0,0]:[0,0.5,1]"
   
   +NOINTERACTION
   
   states
   {
   Spawn:
      PBAL A 5 bright
      PBAL A 1 bright A_FadeOut(1.0 / 35.0)
      wait
   }
}

actor Lith_WeaponText
{
   Height 0
   Radius 0
   Translation "168:191=192:207"
   
   +NOINTERACTION
   
   var int user_iteration;
   var int user_char;
   var int user_chariter;
   var int user_theta;
   var int user_dist;
   var int user_origx;
   var int user_origy;
   var int user_origz;
   
   states
   {
   NoMatch:
      TNT1 A 1
      stop
   Spawn:
      TNT1 A 1
   Spawn1:
      STCF A 0 A_SetUserVar(user_chariter, 65)
      goto SpawnCheck
   Spawn2:
      STC1 A 0 A_SetUserVar(user_chariter, 48)
      goto SpawnCheck
   SpawnCheck:
      "####" ABCDEFGHIJKLMNOPQRSTUVWXYZ 0 bright
      {
         if(user_char == user_chariter)
            { return state("SpawnDone"); }
         
         A_SetUserVar(user_chariter, user_chariter + 1);
         return state(0);
      }
      "####" A 0 bright
      {
         A_SetUserVar(user_iteration, user_iteration + 1);
         if(user_iteration == 1)
            { return state("Spawn2"); }
         else if(user_iteration == 2)
            { return state("NoMatch"); }
         else
            { return state("NoMatch"); }
      }
   SpawnDone:
      "####" "#" 1 bright
      {
         A_SetUserVar(user_theta, (user_theta + 6) % 360);
         
         A_SetUserVar(user_origx, x * FIX);
         A_SetUserVar(user_origy, y * FIX);
         A_SetUserVar(user_origz, z * FIX);
         
         A_Warp(AAPTR_MASTER,
            sin(user_theta) * user_dist,
            cos(user_theta) * user_dist,
            32.0, WARPF_NOCHECKPOSITION);
      }
      "####" "#" 0 bright A_Warp(AAPTR_MASTER,
         user_origx / FIX,
         user_origy / FIX,
         user_origz / FIX,
         0, WARPF_ABSOLUTEPOSITION)
      loop
   }
}



actor Lith_WeaponSprite
{
   +NOINTERACTION
   
   var int user_origx;
   var int user_origy;
   var int user_origz;
   var int user_floatangle;
   var int user_floatzangle;
   
   states
   {
   Spawn:
      "####" "#" 1 bright
      {
         A_SetUserVar(user_floatangle,  (user_floatangle  + 2) % 360);
         A_SetUserVar(user_floatzangle, (user_floatzangle + 3) % 360);
         
         A_SetUserVar(user_origx, x * FIX);
         A_SetUserVar(user_origy, y * FIX);
         A_SetUserVar(user_origz, z * FIX);
         
         A_Warp(AAPTR_MASTER,
            cos(user_floatangle) * 4.0,
            sin(user_floatangle) * 4.0,
            16.0 + (sin(user_floatzangle) * 12.0),
            0.0, WARPF_NOCHECKPOSITION);
      }
      "####" "#" 0 bright A_Warp(AAPTR_MASTER,
         user_origx / FIX,
         user_origy / FIX,
         user_origz / FIX,
         0, WARPF_ABSOLUTEPOSITION)
      loop
   }
}

actor Lith_Weapon : Weapon
{
   Weapon.BobStyle "Alpha"
   Weapon.BobSpeed 1.5
   Radius 16
   Inventory.PickupSound ""
   Inventory.PickupMessage ""
   
   +NOGRAVITY
   +INVENTORY.UNTOSSABLE // Now needed so statistics don't fuck up.
   
   var int user_glowangle;
   var int user_glowzangle;
   var int user_pickupparm;
   var int user_spritetid;
   
   const int LITH_BOBONLY = WRF_NOSWITCH | WRF_NOFIRE;
   
   states
   {
   DummyState: // Actually jumping to this state will cause a crash.
      TNT1 A 0 // Only use this in functions.
      loop
   SpawnLoop:
      "####" "#" 1
      "####" "#" 0 bright
      {
         Thing_ChangeTID(0, CallACS("Lith_UniqueTID"));
         A_SetUserVar("user_spritetid", CallACS("Lith_UniqueTID"));
         // 226:ACS_ExecuteAlways
         A_SetSpecial(226, 200, 0, user_pickupparm, user_spritetid);
         ACS_NamedExecuteAlways("Lith_SpawnWeaponText", 0, user_pickupparm, user_spritetid);
         A_SpawnItemEx("Lith_WeaponSprite",
            0, 0, 0,
            0, 0, 0,
            0, SXF_TRANSFERSPRITEFRAME | SXF_SETMASTER, 0,
            user_spritetid);
      }
   SpawnLoopForRealYo:
      TNT1 A 1
      {
         if(!A_CheckSight("DummyState"))
         {
            A_SetUserVar(user_glowangle,  (user_glowangle   + 5) % 360);
            A_SetUserVar(user_glowzangle, (user_glowzangle  + 2) % 360);
            
            // xyz
            A_SpawnItemEx("Lith_WeaponGlow",
               sin(user_glowangle) * 32.0,
               cos(user_glowangle) * 32.0,
               24.0 + (sin(user_glowzangle) * 9.0),
               0, 0, 0,
               0);
            
            // yz
            A_SpawnItemEx("Lith_WeaponGlow",
               0,
               sin(user_glowangle) * 32.0,
               24.0 + (cos(user_glowangle) * 32.0),
               0, 0, 0,
               0);
            
            A_SpawnItemEx("Lith_WeaponGlow",
               cos(user_glowangle) * 32.0,
               sin(user_glowangle) * 32.0,
               24.0 + (sin(user_glowangle) * 32.0),
               0, 0, 0,
               0);
            
            A_SpawnItemEx("Lith_WeaponGlow",
               cos(user_glowangle) * 32.0,
               ((1.0 - sin(user_glowangle)) * 32.0) - 32.0,
               24.0 + (sin(user_glowangle) * 32.0),
               0, 0, 0,
               0);
            
            // xz
            A_SpawnItemEx("Lith_WeaponGlow",
               sin(user_glowangle) * 32.0,
               0,
               24.0 + (cos(user_glowangle) * 32.0),
               0, 0, 0,
               0);
            
           A_SpawnItemEx("Lith_WeaponGlow",
               sin(user_glowangle) * 32.0,
               cos(user_glowangle) * 32.0,
               24.0 + (sin(user_glowangle) * 32.0),
               0, 0, 0,
               0);
            
           A_SpawnItemEx("Lith_WeaponGlow",
               ((1.0 - sin(user_glowangle)) * 32.0) - 32.0,
               cos(user_glowangle) * 32.0,
               24.0 + (sin(user_glowangle) * 32.0),
               0, 0, 0,
               0);
         }
      }
      loop
   }
}

actor Lith_FuckSuperShotguns : Lith_Dummy replaces SuperShotgun {}

