class Lith_SuperShotgun : Lith_MWeapon
{
   default
   {
      Tag "$LITH_INFO_SHORT_SuperShotgun";
      Weapon.UpSound "weapons/ssg/draw";
      Weapon.SlotNumber 3;
      Weapon.SlotPriority 0.95;
   }

   int m_iter;
   int m_shots;
   
   states(actor)
   {
   SpawnPickup:
      TNT1 A 0 A_SpawnItemEx("Lith_SuperShotgunPickup", 0,0,0, 0,0,0, 0, Lith_PF);
      stop;
   }
   
   states(weapon)
   {
   Ready:
      SSGG A 0 {invoker.m_iter = invoker.m_shots = 0;}
      SSGG A 1 Lith_A_Ready;
      loop;
   Deselect:
      SHTG A 0 A_Lower;
      SSGG A 1 A_Lower;
      loop;
   Select:
      SHTG A 0 A_Raise;
      SSGG A 1 A_Raise;
      loop;
   FireEmpty:
      SSGG A 1;
      SSGG A 2 offset(0, 38);
      SSGG A 1 offset(0, 40);
      SSGG A 1 offset(0, 37) A_PlaySound("weapons/ssg/empty", CHAN_5);
      SSGG A 1 offset(0, 34);
      SSGG A 1 offset(0, 33);
      SSGG A 5 offset(0, 32);
      SSGG AAAA 1 A_ReFire;
      goto Ready;
   Fire:
      SSGG A 0 A_JumpIfInventory("Lith_ShellAmmo", 4, 1);
      goto AltFire;
      SSGG A 2;
      SSGG A 0 {invoker.m_iter = invoker.m_shots = 2;}
      goto Attack;
   Flash:
      SSGG B 1 bright A_Light1;
      SSGG C 1 bright A_Light2;
      goto LightDone;
   AltFire:
      SSGG A 0 A_JumpIfInventory("Lith_ShellAmmo", 2, 1);
      goto FireEmpty;
      SSGG A 2;
      SSGG A 0 {invoker.m_iter = invoker.m_shots = 1;}
   Attack:
      SSGG A 0 A_TakeInventory("Lith_ShellAmmo", 2, TIF_NOTAKEINFINITE);
      SSGG A 0 A_AlertMonsters;
      SSGG A 0 A_FireBullets(9, 6, 16, 6, "BulletPuff");
      SSGG A 0 Lith_A_GunSmoke;
      SSGG A 0 A_PlaySound("weapons/ssg/fire", CHAN_7);
      SSGG A 0 A_Recoil(1.2);
      SSGG A 0 Lith_A_RecoilUp(1.5);
      SSGG A 0 A_GunFlash;
      SSGG A 1;
      SSGG A 0 Lith_A_RecoilDn(0.5);
      SSGG A 1 bright offset(0, 40);
      SSGG A 0 Lith_A_RecoilDn(0.5);
      SSGG A 1 bright offset(0, 37);
      SSGG A 0 Lith_A_RecoilDn(0.5);
      SSGG A 0 A_JumpIf(--invoker.m_shots != 0, "Attack");
      SSGG A 1 offset(0, 35);
      SSGG A 1 offset(0, 33);
      SSGG A 1 offset(0, 32);
   OpenAnim:
      SSGG DEFGH 3;
      SSGG I 2;
      SSGG J 2 A_PlaySound("weapons/ssg/open", CHAN_5);
      SSGG Z 1;
      SSGG Z 0 {
         for(int i = 0; i < invoker.m_iter; i++)
         {
            Lith_A_Casing("Lith_CasShellHot", 20, -1, 30, frandom(3,4), frandom(-7,-8), frandom(2,9));
            Lith_A_Casing("Lith_CasShellHot", 20, -4, 30, frandom(3,4), frandom(-7,-8), frandom(2,9));
         }
      }
      SSGG Z 0 A_JumpIfInventory("Lith_ShellAmmo", 2, "LoadAnim");
      SSGG Z 1 offset(4, 35);
      SSGG Z 1 offset(15, 37);
      SSGG Z 1 offset(30, 42);
      SSGG Z 2 offset(54, 54);
      SSGG Z 0 offset(1, 32);
      goto CloseAnim;
   LoadAnim:
      SSGG KL 3;
      SSGG M 4;
      SSGG N 2 A_PlaySound("weapons/ssg/load", CHAN_6);
      SSGG O 2;
      SSGG O 0 A_JumpIf(--invoker.m_iter != 0, "LoadAnim");
   CloseAnim:
      SSGG P 3;
      SSGG Q 3;
      SSGG R 3 A_PlaySound("weapons/ssg/close", CHAN_7);
      SSGG S 3;
      SSGG AAAAA 1 A_ReFire;
      goto Ready;
   }
}

// EOF

