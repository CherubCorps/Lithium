/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison G. Watson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_SwordPuff : Lith_BulletPuff
{
   default
   {
      DamageType "Melee";
   }

   states {
   PuffNormal:   XPUF A 0 A_StartSound("weapons/sword/swing1", lch_body2); goto Super::PuffNormal;
   PuffMirrored: XPUF A 0 A_StartSound("weapons/sword/swing1", lch_body2); goto Super::PuffMirrored;
   }
}

class Lith_SwordCharge : Inventory {default {Inventory.MaxAmount 25;}}

class Lith_Sword : Lith_Weapon;

default
{
   Tag "sord";
   Weapon.Kickback 100;
   Weapon.SlotNumber 0;

   +WEAPON.CHEATNOTWEAPON
   +WEAPON.MELEEWEAPON
   +WEAPON.NOAUTOFIRE
}

states(Weapon)
{
Ready:
   SORD A 0 {self.TakeInventory("Lith_SwordCharge", 0x7FFFFFFF);}
   SORD A 1 Lith_A_Ready;
   loop;

Deselect:
   /* this check required for death sequences */
   TNT1 A 0 A_JumpIf(health >= 1, "ReadySelector");
   TNT1 A 0 Lith_A_Lower(_raise_instant);
   wait;

Select:
   TNT1 A 0 Lith_A_Raise(_raise_instant);
   loop;

Fire:
   SORD A 0 A_Jump(256, "FireSL", "FireSR");
FireDone:
   SORD A 1 offset(-17, 50) A_WeaponReady(WRF_NOBOB);
   SORD A 1 offset(-13, 49) A_WeaponReady(WRF_NOBOB);
   SORD A 1 offset(-10, 46) A_WeaponReady(WRF_NOBOB);
   SORD A 1 offset(-8 , 43) A_WeaponReady(WRF_NOBOB);
   SORD A 1 offset(-4 , 40) A_WeaponReady(WRF_NOBOB);
   SORD A 1 offset(-2 , 38);
   SORD A 1 offset(-1 , 35);
   SORD A 1 offset(-1 , 33);
   SORD A 1 offset(0  , 32);
   goto ReadySelector;
FireSL:
   SORD BCD 1;
   TNT1 A 2;
   SORD E 1;
   SORD F 1 A_CustomPunch(35, false, 0, "Lith_SwordPuff", 128.0, 0, 0, null, "weapons/sword/hit", "weapons/sword/normal");
   SORD GH 1 A_WeaponReady(WRF_NOBOB);
   TNT1 A 7 A_WeaponReady(WRF_NOBOB);
   goto FireDone;
FireSR:
   SORD A 1 offset(-2 , 38);
   SORD A 1 offset(-10, 46);
   SORD A 1 offset(-17, 50);
   TNT1 A 2;
   SORD I 1;
   SORD J 1 A_CustomPunch(35, false, 0, "Lith_SwordPuff", 128.0, 0, 0, null, "weapons/sword/hit", "weapons/sword/normal");
   SORD KL 1 A_WeaponReady(WRF_NOBOB);
   TNT1 A 7 A_WeaponReady(WRF_NOBOB);
   goto FireDone;

AltFire:
   SORD A 0 A_JumpIf(countInv("Lith_SwordCharge"), "AltFireSkipSound");
   SORD A 0 A_StartSound("weapons/sword/charge", lch_weapon);
AltFireSkipSound:
   SORD A 1;
   SORD A 0 A_JumpIf(countInv("Lith_SwordCharge") == lith_maxInv("Lith_SwordCharge"), "AltFireForReal");
   SORD A 0 {self.GiveInventory("Lith_SwordCharge", 1);}
   SORD A 0 A_Refire;
   goto ReadySelector;
AltFireForReal:
   SORD A 15 A_StartSound("weapons/sword/chargeup", lch_weapon2);
   SORD AB 2;
   SORD CD 1;
   TNT1 A 5;
   SORD E 1 A_StartSound("weapons/sword/swing", lch_weapon3);
   SORD F 1 A_SpawnItemEx("Lith_SwordBlitter", 0, 0, 24, 0, 0, 0, 0, SXF_SETTARGET | SXF_NOCHECKPOSITION);
   SORD GH 1;
   TNT1 A 4;
   SORD A 1 offset(-30, 70);
   SORD A 1 offset(-27, 65);
   SORD A 1 offset(-23, 60);
   SORD A 1 offset(-19, 55);
   SORD A 1 offset(-17, 50);
   SORD A 1 offset(-13, 49);
   SORD A 1 offset(-10, 46);
   SORD A 1 offset( -8, 43);
   SORD A 1 offset( -4, 40);
   SORD A 1 offset( -2, 38);
   SORD A 1 offset( -1, 35);
   SORD A 1 offset( -1, 33);
   SORD A 1 offset(  0, 32);
   goto ReadySelector;
}

/* EOF */
