// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ├──────────────────────────────────────────────────────────────────────────┤
// │                                                                          │
// │ The URANUS drawing system is essentially an instruction set with a       │
// │ (very) simple state machine to draw stuff to the screen, either via ACS  │
// │ or via ZScript. This is meant to replace HudMessage and allow a nicer,   │
// │ unified drawing system between ZScript and ACS, usable by the playsim    │
// │ while still providing maximum performance.                               │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

extend class Lith_URANUS;

Lith_RenderProvider m_ren;

override void onRegister() {
   m_ren = Lith_RenderProvider.create();
}

override void worldUnloaded(WorldEvent evt) {
   m_ren.unload();
}

override void worldTick() {
   m_ren.tick();
}

override void uiTick() {
   if(!(menuDelegate is "Lith_MenuDelegate")) {
      menuDelegate.destroy();
      menuDelegate = Lith_MenuDelegate.create();
   }

   if(gameState == GS_FINALE && (!level.nextMap || level.nextMap.left(6) == "enDSeQ")) {
      callACS("Lith_Finale");
   }

   tickMenu();
}

override void renderOverlay(RenderEvent evt) {
   m_ren.render(evt);
   drawMenu(evt);
}

/* EOF */
