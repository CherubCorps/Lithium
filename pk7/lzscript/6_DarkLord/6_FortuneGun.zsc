/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison G. Watson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_FortuneProjectilePuff : Lith_Dummy {
   default {
      DamageType "Electric";
      Species "Lith_Player";

      +DONTHARMSPECIES
   }
}

class Lith_FortuneShotWind : Actor {
   default {
      RenderStyle "Add";
      Radius 1;
      Height 1;

      +NOINTERACTION
      +BRIGHT
   }

   override void postBeginPlay() {
      super.postBeginPlay();
      roll = frandom(0, 360);
      alpha = frandom(0.5, 0.7);
      scale.x = frandom(0.2, 1.0);
   }

   states {
   Spawn:
      ____ A 20;
      ____ A 1 A_FadeOut;
      wait;
   }
}

class Lith_FortuneShotWindSpawner : Actor {
   default {
      Radius 1;
      Height 1;
      +NOINTERACTION
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {
         if(random(0,1)) A_SpawnItemEx("Lith_FortuneShotWind", frandom(-8,8),frandom(-8,8),frandom(-8,8), flags: SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
      }
      stop;
   }
}

class Lith_FortuneExplosion : Lith_Explosive {
   default {
      DamageType "Shrapnel";
      +NOGRAVITY
      +FORCERADIUSDMG
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 {
         A_Explode(100, 100, XF_NOSPLASH, false, 100);
         A_Quake(3, 20, 0, 640);
         for(int i = 0; i < 19; i++)
            A_SpawnItemEx("Lith_CannonExplosionParticle", 0,0,8, FRandom(-8,8),FRandom(-8,8),FRandom(6,12));
      }
      TNT1 A 0 Lith_A_ExplodeSound;
      TNT1 A 0 Lith_A_DoExplosion;
      stop;
   }
}

class Lith_FortuneShot : FastProjectile {
   default {
      Radius 5;
      Height 5;
      DamageFunction 100;
      Speed 170;
      MissileHeight 8;
      MissileType "Lith_FortuneShotWindSpawner";
   }

   states {
   Spawn:
      TNT1 A -1;
      stop;
   Death:
      TNT1 A 1 A_StartSound("weapons/fortune/hit", lch_body, attenuation: 0.2, pitch: frandom(0.5, 1.0));
      TNT1 A 0 A_SpawnItemEx("Lith_FortuneExplosion", flags: SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
      stop;
   }
}

class Lith_FortuneProjectile : Actor {
   default {
      Height 1;
      Radius 1;
      Projectile;
      +Ripper
      +NoBossRip
   }

   states {
   Spawn:
      TNT1 A 0;
      TNT1 A 0 A_SpawnProjectile("Lith_FortuneShot", flags: CMF_TRACKOWNER|CMF_AIMDIRECTION|CMF_SAVEPITCH|CMF_ABSOLUTEPITCH, pitch: pitch);
      TNT1 AAAAAAAA 2 {
         A_StartSound("weapons/fortune/spark", lch_body, 0, frandom(0.1, 0.3), 2.0, frandom(0.5, 1.5));
         A_CustomRailgun(100, 0, "", Lith_UTIL.colorLerp("#ffffff", "#91c3ff", fRandom(0.0, 1.0)), RGF_SILENT|RGF_EXPLICITANGLE|RGF_FULLBRIGHT|RGF_CENTERZ, 0, 50, "Lith_FortuneProjectilePuff", 0, 0, 16000, 10, 0.2, 0, spawnofs_z: 32);
      }
      stop;
   }
}

class Lith_FortuneSpark : Lith_ShockEffect {
   default {
      +FORCEXYBILLBOARD
      +FRIENDLY
      +NOBLOCKMAP
      +NOGRAVITY
      -NOINTERACTION
   }

   states
   {
   Spawn:
      ZAP1 FFEEFFEEFFEEDDCCBBCCBBAABBAA 1 {
         if(master) {
            A_Warp(AAPTR_PLAYER1, cos(master.pitch)*16, 4, 44-sin(master.pitch)*16, 0, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
            angle = master.angle;
            pitch = master.pitch;
         }
         if(random(0, 1) == 0) {
            A_CustomRailgun(5, 0, "", "White", RGF_SILENT|RGF_EXPLICITANGLE|RGF_FULLBRIGHT|RGF_CENTERZ, 0, 10, "Lith_ShockEffectPuff", FRandom(-45, 45), FRandom(-45, 45), FRandom(100,400), 10, 0.2, 0);
         }
      }
      stop;
   }
}

class Lith_FortuneSpark2 : Lith_FortuneSpark {
}

class Lith_FortuneGun : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_PlasmaRiflePickup";
   Lith_Weapon.MagSize 4;
   Tag "$LITH_INFO_SHORT_FortuneGun";
   Weapon.SlotNumber 6;
   Weapon.SlotPriority 1;
   Lith_Weapon.AmmoType "Lith_PlasmaAmmo";

   +WEAPON.NOAUTOFIRE;
}

action(Weapon) void Lith_A_FireFortune() {
   lith_takeAmmo(875);
   A_SetBlend("#80ffd5", 0.4, 20);
   A_StartSound("weapons/fortune/fire", lch_weapon, attenuation: 0.5, pitch: frandom(0.9, 1.05));
   A_GunFlash("DummyFlash");
   A_Recoil(4);
   A_Quake(2, 15, 0, 128);
   let pr = A_FireProjectile("Lith_FortuneProjectile", spawnheight: -32);
   pr.pitch = self.pitch;
   Lith_A_RecoilUp(10);
}

states(Weapon) {
Ready:
   FORT A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   FORT A 0 {
      if(random(0, 77) == 0 || CallACS("Lith_Timer") % 50 == 0) {
         A_StartSound("weapons/fortune/spark", lch_weapon3, pitch: frandom(0.9, 1.2));
         A_SpawnItemEx("Lith_FortuneSpark", flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
      }
   }
   loop;

Deselect:
   FORT A 1 Lith_A_Lower(_raise_slow);
   loop;

Select:
   FORT A 1 Lith_A_Raise(_raise_slow);
   loop;

Fire:
   #### # 0 lith_jumpNoAmmo(875);
   #### # 0 Lith_A_JumpIfMagEmpty;
   #### # 0 Lith_A_MagIncr;
   FORT A 1 offset(-2, 34) A_StartSound("weapons/fortune/charge", lch_weapon2);
   FORT A 1 offset(2, 32) A_SpawnItemEx("Lith_FortuneSpark2", flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
   FORT A 1 offset(-1, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 32);
   FORT A 1 offset(-1, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 32);
   FORT A 1 offset(-1, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 34);
   FORT A 1 offset(5, 37);
   FORT A 1 offset(-1, 33) A_SpawnItemEx("Lith_FortuneSpark2", flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 32);
   FORT A 1 offset(-1, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 32);
   FORT A 1 offset(-1, 33);
   FORT A 1 offset(1, 31);
   FORT A 1 offset(-1, 32);
   FORT A 1 offset(2, 33);
   FORT A 1 offset(2, 34);
   FORT A 1 offset(5, 37);
   FORT B 2 bright offset(1, 32) Lith_A_FireFortune;
   FORT C 2 offset(2, 34);
   FORT C 1 offset(-1, 32);
   FORT A 3 offset(22, 64);
   FORT A 3 offset(19, 60);
   FORT A 3 offset(16, 55);
   FORT A 2 offset(15, 52);
   FORT A 2 offset(14, 50);
   FORT A 2 offset(13, 48);
   FORT A 1 offset(12, 44);
   FORT A 1 offset(11, 43);
   FORT A 1 offset(10, 42);
   FORT A 1 offset(8, 41);
   FORT A 1 offset(7, 40);
   FORT A 1 offset(6, 38);
   FORT A 1 offset(5, 37) A_ReFire;
   FORT A 1 offset(4, 36) A_WeaponReady(WRF_ALLOWRELOAD);
   FORT A 1 offset(3, 35) A_WeaponReady(WRF_ALLOWRELOAD);
   FORT A 1 offset(2, 34) A_WeaponReady(WRF_ALLOWRELOAD);
   FORT A 1 offset(1, 33) A_WeaponReady(WRF_ALLOWRELOAD);
   FORT A 1 offset(1, 32) A_WeaponReady(WRF_ALLOWRELOAD);
   goto ReadySelector;
FireEmpty:
   FORT A 2 offset(0, 42);
   FORT A 2 offset(0, 38);
   FORT A 2 offset(0, 35) A_StartSound("weapons/spas/empty", lch_dryweapon);
   FORT A 1 offset(0, 34);
   FORT A 1 offset(0, 33);
   FORT A 1 offset(0, 32);
   goto ReadySelector;

Reload:
   FORT A 1 Lith_A_JumpIfMagFull;
   FORT A 1 lith_a_setInterpolation(true);
   FORT A 1 offset(-2, 34) A_StartSound("weapons/fortune/reloadout", lch_reload);
   FORT A 1 offset(-4, 37);
   FORT A 0 Lith_A_ReloadBobUp(0.5);
   FORT A 1 offset(-9, 43);
   FORT A 2 offset(-12, 47);
   FORT A 3 offset(-14, 52);
   FORT A 4 offset(-12, 55) Lith_A_DropMag("Lith_SniperRifleMagazine", "Lith_SniperRifleMagazine2", 8,-1,20, frandom(0,1),frandom(-1,-2),0);
   FORT A 5 offset(-11, 57);
   FORT A 9 offset(-10, 60);
   FORT A 10 offset(-11, 60);
   FORT A 0 Lith_A_ReloadFinish;
   FORT A 0 Lith_A_ReloadBobDn(1.5);
   FORT A 2 offset(-13, 59) A_StartSound("weapons/fortune/reloadin", lch_reload2);
   FORT A 2 offset(-11, 49);
   FORT A 2 offset(-11, 47);
   FORT A 8 offset(-11, 45) lith_a_setInterpolation(false);
   FORT A 1 offset(-12, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(-8, 53) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(-1, 57) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(3, 56) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(8, 52) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(10, 49) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(8, 47) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 1 offset(7, 45) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 2 offset(5, 43) A_WeaponReady(WRF_NOBOB|WRF_NOFIRE);
   FORT A 2 offset(3, 40) A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY);
   FORT A 3 offset(2, 39) A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY);
   FORT A 3 offset(1, 37) A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY);
   FORT A 4 offset(1, 34) A_WeaponReady(WRF_NOBOB|WRF_NOSECONDARY);
   FORT A 4 A_WeaponReady(WRF_NOBOB);
   goto ReadySelector;
}

/* EOF */
