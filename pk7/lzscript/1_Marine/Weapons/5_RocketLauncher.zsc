class Lith_8BallGrenade : Lith_RifleGrenade
{
   default
   {
      Gravity 0.1;
      Speed 10;
      BounceCount 5;
      BounceFactor 1;
      WallBounceFactor 1;
   }
}

class Lith_SpiralRocketHackActor9000 : Actor
{
   default
   {
      +BRIGHT
      +NOINTERACTION
   }

   states
   {
   Spawn:
      #### # 2;
      stop;
   }
}

class Lith_SpiralRocket : Lith_Rocket
{
   default
   {
      Speed 17;
      RenderStyle "None";
   }

   vector3 m_apos;
   int m_phasexyz;

   override void PostBeginPlay()
      {m_phasexyz = random(0, 360);}

   override void Tick()
   {
      SetOrigin(pos + m_apos, false);
      Super.Tick();
      A_SpawnItemEx("Lith_SpiralRocketHackActor9000", flags: SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
      SetOrigin(pos - m_apos, false);

      if(vel.x || vel.y || vel.z)
      {
         m_apos.x = cos(angle + 90) * sin(m_phasexyz) * 12;
         m_apos.y = sin(angle + 90) * sin(m_phasexyz) * 12;
         m_apos.z =                   cos(m_phasexyz) * 12;
      }

      m_phasexyz = (m_phasexyz + 7) % 360;
   }
}

class Lith_GrenadeLauncher : Lith_MWeapon;

default
{
   Tag "$LITH_INFO_SHORT_GrenadeLauncher";
   Weapon.UpSound "weapons/rocket/draw";
   Weapon.SlotNumber 5;
   Weapon.SlotPriority 1;
   Weapon.BobStyle "Smooth";
   Weapon.BobSpeed 1.3;
   Weapon.BobRangeY 1.1;
   Weapon.BobRangeX 0.9;
   
   +WEAPON.NOAUTOFIRE
}

int m_loaded;
int m_iter;
int m_mode;

states(actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_RocketLauncherPickup");
   stop;
}

states(weapon)
{
Ready:
   GRLG A 1 Lith_A_Ready;
   loop;

Deselect:
   GRLG AAA 0 A_Lower;
   GRLG A 1;
   loop;
Select:
   GRLG AAA 0 A_Raise;
   GRLG A 1;
   loop;

Fire:
   GRLG A 1;
   GRLG A 0 A_JumpIf(CountInv("Lith_RocketAmmo") == 0, "FireEmpty");
   GRLG A 0 {
      invoker.m_loaded = invoker.m_iter = invoker.m_mode = 0;
   }
   GRLG A 0 A_JumpIf(CallACS("LPData", pdata_upgrade, UPGR_ChargeRPG), "FireUnreal");
   GRLG A 0 A_JumpIf(CallACS("LPData", pdata_upgrade, UPGR_HomingRPG), "FireHoming");
FireReal:
   GRLG A 0 A_AlertMonsters;
   GRLG A 0 A_PlaySound("weapons/rocket/fire", CHAN_WEAPON);
   GRLG A 0 A_TakeInventory("Lith_RocketAmmo", 1, TIF_NOTAKEINFINITE);
   GRLG A 0 A_FireProjectile("Lith_Rocket");
FireAnim:
   GRLG B 1 bright A_GunFlash;
   GRLG B 1 bright;
   GRLG C 1 bright offset(0, 33);
   GRLG CD 1 bright offset(0, 34);
   GRLG D 1 offset(0, 56);
   GRLG E 1 offset(0, 59) A_PlaySound("weapons/rocket/load", CHAN_7);
   GRLG A 1 offset(0, 56);
   GRLG A 1 offset(0, 50);
   GRLG A 1 offset(0, 45);
   GRLG A 1 offset(0, 38);
   GRLG A 1 offset(0, 35);
   GRLG A 1 offset(0, 34);
   GRLG A 1 offset(0, 33);
   GRLG AAAA 1 offset(0, 32) A_ReFire;
   goto Ready;

AltFire:
   GRLG A 1 A_WeaponReady(Lith_BOBONLY);
   GRLG A 0 A_JumpIf(CallACS("LPData", pdata_upgrade, UPGR_HomingRPG), "Ready");
   GRLG A 0 A_JumpIfInventory("Lith_RocketAmmo", 1, 1);
   goto FireEmpty;
   GRLG A 0 A_JumpIf(CallACS("LPData", pdata_upgrade, UPGR_ChargeRPG), "FireReal");
   GRLG A 0 A_AlertMonsters;
   GRLG A 0 A_PlaySound("weapons/rocket/grenade", CHAN_WEAPON);
   GRLG A 0 A_TakeInventory("Lith_RocketAmmo", 1, TIF_NOTAKEINFINITE);
   GRLG A 0 A_FireProjectile("Lith_RifleGrenade");
   goto FireAnim;

Flash:
   TNT1 A 2 A_Light2;
   TNT1 A 1 A_Light1;
   goto LightDone;

FireEmpty:
   GRLG A 1;
   GRLG A 2 offset(0, 41);
   GRLG A 1 offset(0, 45);
   GRLG A 1 offset(0, 43);
   GRLG A 1 offset(0, 40) A_PlaySound("weapons/rocket/empty", CHAN_5);
   GRLG A 1 offset(0, 38);
   GRLG A 1 offset(0, 36);
   GRLG A 1 offset(0, 33);
   GRLG A 1 offset(0, 32);
   GRLG A 5;
   GRLG AAAA 1 A_ReFire;
   goto Ready;

FireHoming:
   GRLG A 1;
   GRLG A 0 A_AlertMonsters;
   GRLG A 0 A_PlaySound("weapons/rocket/fire", CHAN_WEAPON);
   GRLG A 0 A_TakeInventory("Lith_RocketAmmo", 1, TIF_NOTAKEINFINITE);
   GRLG A 0 A_FireProjectile("Lith_HomingRocket");
   goto FireAnim;

FireUnreal:
   GRLG A 0 {++invoker.m_loaded;}
   GRLG A 0 A_TakeInventory("Lith_RocketAmmo", 1, TIF_NOTAKEINFINITE);
FireUnrealRefire:
   GRLG A 2;
   GRLG A 0 A_JumpIf(invoker.m_loaded == 8, "FireUnrealReal");
   GRLG A 0 A_JumpIf(invoker.m_iter++, "FireUnrealLoad");
   goto FireUnrealCheckRefire;
FireUnrealLoad:
   GRLG A 0 A_PlaySound("weapons/rocket/lock", CHAN_5);
   GRLG A 0 A_JumpIfInventory("Lith_RocketAmmo", 1, 1);
   goto FireUnrealReal;
   GRLG A 0 A_TakeInventory("Lith_RocketAmmo", 1, TIF_NOTAKEINFINITE);
   GRLG A 0 {++invoker.m_loaded;}
   GRLR A 1;
   GRLR BC 2;
   GRLR D 4 A_GunFlash("AltModeChanger", GFF_NOEXTCHANGE);
   GRLR EF 2;
   GRLR GH 1;
FireUnrealCheckRefire:
   GRLG A 2;
   GRLG A 0 A_ReFire("FireUnrealRefire");
FireUnrealReal:
   GRLG A 0 A_AlertMonsters;
   GRLG A 0 A_PlaySound("weapons/rocket/launch", CHAN_6);
   GRLG A 0 A_PlaySound("weapons/rocket/fire", CHAN_WEAPON);
   GRLG A 0 A_JumpIf(invoker.m_loaded > 1, "FireThatShit");
   GRLG A 0 A_FireProjectile("Lith_Rocket");
   goto FireAnim;
FireThatShit:
   GRLG A 0 {
      while(invoker.m_loaded--) switch(invoker.m_mode)
      {
      case 0: A_FireProjectile("Lith_Rocket", 0, false, random(-24,24)); break;
      case 1: A_FireProjectile("Lith_SpiralRocket", 0, false); break;
      case 2: A_FireProjectile("Lith_8BallGrenade", random(-4,4), false, random(-7,7), random(-4,4)); break;
      }
   }
   goto FireAnim;

AltModeChanger:
   TNT1 A 0 {
      if(player.buttons & BT_ALTATTACK) switch(invoker.m_mode)
      {
      case 0: ++invoker.m_mode; A_PlaySound("weapons/rocket/setalt");  break;
      case 1: ++invoker.m_mode; A_PlaySound("weapons/rocket/setalt1"); break;
      }
   }
   stop;
}

// EOF
