/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison Sanderson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_700Laser : Actor
{
   default
   {
      Scale 0.25;
      Alpha 0.5;
      RenderStyle "Translucent";

      ClearFlags;
      +NOINTERACTION
      +BRIGHT
      +FORCEXYBILLBOARD
   }

   states
   {
   Spawn:
      BLLT U 2;
      BLLT U 1 A_FadeOut;
      wait;
   }
}

class Lith_700Laser2 : Lith_700Laser
{
   default
   {
      Alpha 0.2;
   }
}

class Lith_700Express : Lith_DWeapon;

default
{
   Lith_Weapon.MagSize 4;
   Tag "$LITH_INFO_SHORT_700Express";
   Weapon.SlotNumber 2;
   Weapon.SlotPriority 1;

   +WEAPON.NOAUTOFIRE;
}

action(Weapon) void Lith_A_Fire700e()
{
   A_GunFlash("DummyFlash");
   A_Recoil(1.5);
   A_Quake(2, 3, 0, 128);
   Lith_FireBullets(0, 0, -1, 60*frandom(1,1.7), FBF_NORANDOM, "Lith_700Bullet", 4);
   for(int i = 1; i <= 3; i++)
      Lith_A_GunSmoke(7, 3 * i);
   A_PlaySound("weapons/700e/fire", CHAN_WEAPON);
}

action(Weapon) void Lith_A_Laser(double pit)
{
   if(invoker.Owner)
   {
      let ply = Lith_Player(invoker.Owner);
      let sz  = ply.Height / 2 + ply.AttackZOffset * ply.Player.CrouchFactor;

      FLineTraceData ltd;
      LineTrace(ply.m_IYaw, 2048, ply.m_IPitch - pit, 0, sz, 0, 0, ltd);
      Spawn("Lith_700Laser", ltd.HitLocation);

      LineTrace(ply.Angle, 2048, ply.Pitch - pit, 0, sz, 0, 0, ltd);
      Spawn("Lith_700Laser2", ltd.HitLocation);

      let loc = ltd.HitLocation;

      let ps = Sin(ply.Pitch - pit - 90);
      let cz = Cos(ply.Pitch - pit - 90);
      let ys = Sin(ply.Angle - 15);
      let yc = Cos(ply.Angle - 15);
      let cx = ps * yc;
      let cy = ps * ys;

      let beg = (ply.Pos.X      + cx * -16,
                 ply.Pos.Y      + cy * -16,
                 ply.Pos.Z + sz + cz * -16 + 1);

      ys = Sin(ply.Angle);
      yc = Cos(ply.Angle);
      cx = ps * yc;
      cy = ps * ys;
      let end = (beg.X + cx * -32,
                 beg.Y + cy * -32,
                 beg.Z + cz * -32);

      for(int i = 0; i < 10; i++)
      {
         let a = Spawn("Lith_700Laser2", Lith_UTIL.Vec3Lerp(beg, end, i / 10.0));
         a.Alpha -= i / 40.0;
      }
   }
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_PistolPickup");
   stop;
}

states(Weapon)
{
Ready:
   700E A 1 Lith_A_Ready(WRF_ALLOWRELOAD);
   700E A 0 Lith_A_Laser(0.0);
   loop;

Deselect:
   700E AAA 0 A_Lower;
   700E A 1;
   loop;
Select:
   700E AAA 0 A_Raise;
   700E A 1;
   loop;

Fire:
   TNT1 A 0 Lith_A_JumpIfMagEmpty;
   TNT1 A 0 Lith_A_MagIncr;
   700E A 1 offset(2, 32) Lith_A_Laser(0.0);
   700E Y 1 bright {
      Lith_A_Fire700e();
      Lith_A_Laser(22.0);
   }
   700E Z 1 bright offset(10, 28) {
      Lith_A_RecoilUp(2);
      Lith_A_Laser(16.0);
   }
   700E CC 1 bright Lith_A_Laser(9.0);
   700E CC 1 offset(9, 28) Lith_A_Laser(8.0);
   700E C 1 offset(7, 30) Lith_A_Laser(7.0);
   700E C 1 offset(5, 31) Lith_A_Laser(6.0);
   700E C 1 offset(4, 31) Lith_A_Laser(6.0);
   700E C 1 offset(3, 32) Lith_A_Laser(6.5);
   700E BBB 1 offset(2, 32) Lith_A_Laser(5.0);
   700E BBB 1 offset(1, 32) Lith_A_Laser(5.0);
   700E A 1 Lith_A_Laser(0.0);
   700E A 1 Lith_A_Laser(0.0);
   700E A 1 offset(0, 32) Lith_A_Laser(0.0);
   700E A 1 offset(0, 32) Lith_A_Laser(0.0);
   goto ReadySelector;

FireEmpty:
   700E A 1 Lith_A_Laser(0.0);
   700E AA 1 offset(3, 38) Lith_A_Laser(0.0);
   700E A 1 offset(7, 40) Lith_A_Laser(0.0);
   700E A 1 offset(5, 37) {
      A_PlaySound("weapons/cshotgun/empty", CHAN_5);
      Lith_A_Laser(0.0);
   }
   700E A 1 offset(4, 34) Lith_A_Laser(0.0);
   700E A 1 offset(2, 33) Lith_A_Laser(0.0);
   700E AAAAA 1 offset(1, 32) Lith_A_Laser(0.0);
   goto ReadySelector;

Reload:
   700E B 1 Lith_A_JumpIfMagFull;
   700E B 1 offset(2, 31) A_PlaySound("weapons/700e/move", CHAN_6);
   700E C 1 offset(1, 32) Lith_A_ReloadBobUp(0.5);
   700E C 1 offset(3, 32) Lith_A_ReloadBobUp(0.5);
   700E C 2 offset(4, 33) Lith_A_ReloadBobUp(0.5);
   700E C 5 offset(5, 34) Lith_A_ReloadBobUp(0.5);
   700E C 2 offset(2, 38);
   700E D 1 offset(3, 32) A_PlaySound("weapons/700e/out", CHAN_5);
   700E D 1 offset(1, 32);
   700E D 1 offset(-1, 32) Lith_A_ReloadBobDn(0.25);
   700E E 1 offset(-1, 32) Lith_A_ReloadBobDn(0.25);
   700E E 1 offset(-2, 32) Lith_A_ReloadBobDn(0.25);
   700E F 1 offset(-3, 40);
   700E F 1 offset(-4, 54) {
      for(int i = 0; i < invoker.m_Fired; i++)
         Lith_A_Casing("Lith_CasBig", 10, frandom(1,2), 32, frandom(1,2), frandom(1,3), 0);
   }
   700E F 1 offset(-9, 68);
   TNT1 A 6 A_SetTics(invoker.m_Fired * 2);
   TNT1 A 2 Lith_A_ReloadFinish;
   700E C 1 offset(-35, 100);
   700E C 1 offset(-20, 90) {
      A_PlaySound("weapons/700e/in", CHAN_5);
      Lith_A_ReloadBobUp(2);
   }
   700E C 1 offset(-15, 70);
   700E C 1 offset(-10, 60);
   700E C 1 offset(-7, 40);
   700E C 2 offset(-5, 36);
   700E C 4 offset(-2, 34);
   700E B 2 offset(1, 32);
   700E A 2;
   goto ReadySelector;
}

/* EOF */
