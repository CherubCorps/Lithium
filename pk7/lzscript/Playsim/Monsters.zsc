class Lith_BossFucker : Inventory
{
   override void Tick()
   {
      if(!owner.tracer || owner.tracer.health <= 0)
      {
         owner.A_BossDeath();
         owner.clearCounters();
         owner.destroy();
         destroy();
      }
   }
}

extend class Lith_HERMES;

static void PrepareForRagnarok(Actor mo)
{
   mo.damageMultiply = 1.4;
   mo.scale.x *= frandom(0.9, 1.1);
   mo.scale.y *= frandom(0.9, 1.1);
}

static void MonsterBarrierLook(Actor mo)
{
   for(let it = BlockThingsIterator.Create(mo, 192*2); it.next();)
      if(it.thing.player)
         CallACS("Lith_AddAngle", it.thing.pos.x, it.thing.pos.y);
}

static void SpawnBoss(Actor a, string name, int phase)
{
   let b = Lith_Phantom(Actor.Spawn(name, a.pos));

   // copy info
   b.spawnangle = a.spawnangle;
   b.spawnpoint = a.spawnpoint;
   b.angle      = a.angle;
   b.pitch      = a.pitch;
   b.roll       = a.roll;
   b.special    = a.special;
   b.special1   = a.special1;
   b.special2   = a.special2;
   b.args[0]    = a.args[0];
   b.args[1]    = a.args[1];
   b.args[2]    = a.args[2];
   b.args[3]    = a.args[3];
   b.args[4]    = a.args[4];
   b.vel        = a.vel;
   b.master     = a.master;
   b.target     = a.target;
   b.tracer     = a.tracer;

   b.changeTID(a.tid);

   b.bCOUNTSECRET = a.spawnflags & MTF_SECRET;
   b.spawnflags   = a.spawnflags & ~MTF_SECRET;
   b.handleSpawnFlags();
   b.spawnflags = a.spawnflags;

   b.health += a.health / 2;

   // delete it if it's not a boss, otherwise prepare for omega hack
   if(!a.bBOSS && !a.bBOSSDEATH)
   {
      a.clearCounters();
      a.destroy();
   }
   else
   {
      // great, it's going to screw everything up, let's "fix" that:
      // we shut them up, banish them to the shadow realm, remove them from
      // the world, lobotomize them and make them into a zombie. morbid...
      for(int i = 1; i < 8; i++) a.A_StopSound(i);
      a.setXYZ((65535, 65535, 0)); // Banish.
      a.removeFromHash();
      a.tics = -1;
      a.tracer = b;
      a.giveInventory("Lith_BossFucker", 1);
   }

   b.m_phase = phase;

   if(phase == 2)
   {
      b.damageMultiply = 1.5;
      b.reactionTime   = 4;
      b.health        *= 1.5;
      b.bMISSILEMORE   = true;
   }
   else if(phase == 3)
   {
      b.damageMultiply   = 2;
      b.reactionTime     = 2;
      b.health          *= 2;
      b.bMISSILEMORE     = true;
      b.bMISSILEEVENMORE = true;
   }
}

static void TriggerBoss()
{
   if(CallACS("LWData", wdata_bossspawned)) return;

   Actor mo;
   for(let it = ThinkerIterator.Create(); (mo = Actor(it.next()));)
   {
      if(mo.bISMONSTER && mo.health >= 500) {
         mo.ACS_NamedExecuteAlways("Lith_SpawnBoss", 0);
         break;
      }
   }
}

// EOF
