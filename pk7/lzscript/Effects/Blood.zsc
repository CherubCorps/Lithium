class Lith_Blood1 : Actor
{
   default
   {
      RenderStyle "Translucent";
      Alpha 0.7;

      +NOBLOCKMAP
      +NOTELEPORT
   }

   states
   {
   Spawn:
      BLUD ABC 8;
      stop;
   }
}

class Lith_Blood2 : Lith_Blood1 {states {Spawn: BLUD BC 8; stop;}}
class Lith_Blood3 : Lith_Blood1 {states {Spawn: BLUD  C 8; stop;}}

class Lith_Blood : Blood replaces Blood;

default
{
   +CORPSE
}

void Lith_A_Dogs()
{
   for(let it = BlockThingsIterator.Create(self, 64); it.Next();)
   {
      let mo = it.thing;
      if(mo.player && mo.CountInv("Lith_Dogs"))
         mo.A_SpawnItemEx("Lith_RealSpectralSteggles", 0,0,32, 10,0,9, FRandom(0,360), SXF_NOCHECKPOSITION|SXF_SETTARGET);
   }
}

void Lith_A_SpawnBlood(class<Actor> cl)
{
   for(int i = 0, n = Random(1, 2); i < n; i++)
      A_SpawnItemEx(cl, FRandom(-1,1),FRandom(-1,1),FRandom(-1,1), FRandom(-2,2),FRandom(-2,2),FRandom(1,2), 0, SXF_TRANSFERTRANSLATION, 64);
}

int m_lev;

states
{
Spawn:
   TNT1 A 0 nodelay ResolveState("Heavy"); // HACK: this is STILL hardcoded!
   TNT1 A 0 ResolveState("Medium");
   TNT1 A 0 ResolveState("Low");
   BLUD A 0 Lith_A_Dogs;
   stop;
Heavy:
   BLUD A 0 {m_lev = 1;}
   BLUD AA 4 Lith_A_SpawnBlood("Lith_Blood1");
Medium:
   BLUD C 0 {m_lev = 2;}
   BLUD BB 4 Lith_A_SpawnBlood("Lith_Blood2");
Low:
   BLUD E 0 {m_lev = 3;}
   BLUD CC 4 Lith_A_SpawnBlood("Lith_Blood3");
   BLUD CCCCCCCCCC 2 A_FadeOut(0.1);
   stop;
Crash:
   BLSP A 0 {
      A_Stop();
      A_SetScale(FRandom(0.6, 0.9), Scale.Y);
      setXYZ(pos + (FRandom(-4,4), FRandom(-4,4), 0));
      switch(m_lev) {
      case 1: alpha = 0.75; return ResolveState("OkHigh");
      case 2: alpha = 0.50; return ResolveState("OkMedium");
      case 3: alpha = 0.25; return ResolveState("OkLow");
      }
      return state(null);
   }
   stop;
OkHigh:   BLSP A 0; goto Ok;
OkMedium: BLSP B 0; goto Ok;
OkLow:    BLSP C 0; goto Ok;
Ok:
   BLSP # Random(140, 200);
   BLSP # 0 {
      switch(m_lev) {
      case 1: return ResolveState("DoneHigh");
      case 2: return ResolveState("DoneMedium");
      case 3: return ResolveState("DoneLow");
      }
      return state(null);
   }
   stop;
DoneHigh:
   BLSP BBBBBBBBBB 1 A_FadeOut(0.01);
DoneMedium:
   BLSP CCCCCCCCCC 1 A_FadeOut(0.01);
DoneLow:
   BLSP DDDDDDDDDD 1 A_FadeOut(0.01);
   stop;
}

// EOF
