class Lith_HealthBonusVial : Lith_BasicPickup
{
   default
   {
      Tag "Health Bonus";
      Inventory.PickupSound "items/healthbonus";
      Lith_BasicPickup.LogName "HealthBonus";
      Lith_BasicPickup.LogType msg_huds;
      Lith_BasicPickup.Vacuum 1;
      Scale 0.7;
   }

   override bool TryPickup(in out Actor mo)
   {
      mo.ACS_ScriptCall("Lith_GiveHealthBonus", 1);
      return Super.TryPickup(mo);
   }

   states
   {
   Spawn:
      BON1 ABCDCB 6;
      loop;
   }
}

class Lith_Radio : Lith_ScoreItem
{
   default
   {
      Lith_ScoreItem.Score Score_Clip;
      Lith_BasicPickup.LogName "Clip";
      Lith_BasicPickup.Vacuum 1;
      Inventory.PickupSound "player/pickup/scoresmall";
   }

   override void PostBeginPlay()
   {
      A_GiveInventory("Lith_BulletAmmo", AmmoAmt_Bullet);
      Super.PostBeginPlay();
   }

   states
   {
   Spawn:
      SCOR A -1 bright;
      stop;
   }
}

class Lith_BoxOfAmmo : Lith_ScoreItem
{
   default
   {
      Lith_ScoreItem.Score Score_ClipBox;
      Lith_BasicPickup.LogName "ClipBox";
      Inventory.PickupSound "player/pickup/scorebig";
   }

   override void PostBeginPlay()
   {
      A_GiveInventory("Lith_BulletAmmo", AmmoAmt_BulletBox);
      Super.PostBeginPlay();
   }

   states
   {
   Spawn:
      SCOR B -1 bright;
      stop;
   }
}

class Lith_HealthBonus : Lith_RandomSpawn replaces HealthBonus
{
   default
   {
      Lith_RandomSpawn.SpawnNum lrsn_hbonus;

      +COUNTITEM
   }
}

class Lith_ArmorBonus : Lith_RandomSpawn replaces ArmorBonus
{
   default
   {
      Lith_RandomSpawn.SpawnNum lrsn_abonus;

      +COUNTITEM
   }
}

class Lith_Clip : Lith_RandomSpawn replaces Clip
{
   default
   {
      Lith_RandomSpawn.SpawnNum lrsn_clip;
   }
}

class Lith_ClipBox : Lith_RandomSpawn replaces ClipBox
{
   default
   {
      Lith_RandomSpawn.SpawnNum lrsn_clipbx;
   }
}

// EOF
