/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison G. Watson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_Rems : Lith_DWeapon;

default {
   Lith_Weapon.SpawnType "Lith_BFG9000Pickup";
   Tag "$LITH_INFO_SHORT_Rems";
   Weapon.SlotNumber 7;
   Weapon.SlotPriority 1;
   Weapon.UpSound "weapons/rems/draw";
   Lith_Weapon.AmmoType "Lith_CannonAmmo";

   +Weapon.NoAutoFire
}

int m_steamy, m_fireLoop;

states(Weapon) {
Ready:
   REMS A 0 {
      if(invoker.m_steamy) {
         if(callAcs("Lith_Timer") % 3 == 0) {
            a_fireProjectile("Lith_GunSmokeEmitter", frandom(-10, 10), 0, 1.5, 9, FPF_NOAUTOAIM, frandom(-10, 10));
         }
         invoker.m_steamy--;
      }
   }
   REMS A 1 Lith_A_Ready;
   loop;

Deselect:
   REMS A 1 Lith_A_Lower(_raise_slow);
   wait;

Select:
   REMS A 0 { invoker.m_steamy = 0; }
   REMS A 1 Lith_A_Raise(_raise_slow);
   wait;

Fire:
   REMS A 1 offset(0, 32) lith_a_setInterpolation(true);
   REMS A 1 offset(1, 33) {
      a_startSound("weapons/rems/fire", lch_weapon);
      invoker.m_fireLoop = 0;
      invoker.m_steamy = 350;
   }
   REMS B 1 offset(171, 88) bright;
   REMS C 1 offset(154, 81) bright;
FireLoop:
   REMS BC 1 bright {
      A_OverlayOffset(_psp_weapon, fRandom(128, 164), FRandom(73, 80), WOF_INTERPOLATE);
      return invoker.m_fireLoop++ == 170 ? resolveState("FireDone") : state(null);
   }
   loop;
FireDone:
   REMS C 1 bright offset(151, 80);
   REMS B 1 bright offset(155, 76);
   REMS D 1 bright offset(141, 74);
   REMS A 2 offset(4, 39);
   REMS A 3 offset(2, 35);
   REMS A 4 offset(1, 33) lith_a_setInterpolation(false);
   goto ReadySelector;
}

/* EOF */
