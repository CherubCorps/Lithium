// ╭──────────────────────────────────────────────────────────────────────────╮
// │                                                                          │
// │             Distributed under the CC0 public domain license.             │
// │   By Alison G. Watson. Attribution is encouraged, though not required.   │
// │                See licenses/cc0.txt for more information.                │
// │                                                                          │
// ╰──────────────────────────────────────────────────────────────────────────╯

class Lith_PlayerclassMenu : ListMenu;

override void Init(Menu parent, ListMenuDescriptor desc) {
   Super.Init(parent, desc);
   for(int i = 0; i < mDesc.mItems.size(); ++i) {
      let sel = ListMenuItemTextItem(mDesc.mItems[i]);
      if(sel) {
         sel.mColor = Font.findFontColor(Lith_HERMES.localize(sel.mText .. "_Col"));
      }
   }
}

override void Drawer() {
   Super.Drawer();
   if(mDesc.mSelectedItem < 0) return;
   let sel = ListMenuItemTextItem(mDesc.mItems[mDesc.mSelectedItem]);
   if(sel) {
      let col = Lith_HERMES.localize(sel.mText .. "_Col");
      let nam = Lith_HERMES.localize(sel.mText .. "_Nam");
      let dsc = Lith_HERMES.localize(sel.mText .. "_Dsc");
      let txt = Lith_HERMES.localize(sel.mText);
      let cr  = Font.FindFontColor(col);
      Font bigf = menuDelegate.pickFont("bigupper");
      Font smlf = menuDelegate.pickFont("ltrmfont");
      Screen.DrawText(bigf, cr, 168, 59,  txt, DTA_Clean, true);
      Screen.DrawText(smlf, cr, 168, 73,  nam, DTA_Clean, true);
      if(cr == Font.CR_BLACK) {
         Screen.DrawText(smlf, cr, 176, 81, "NOT IMPLEMENTED", DTA_Clean, true);
      }
      Screen.DrawText(smlf, cr, 104, 108, dsc, DTA_Clean, true);
   }
}

/* EOF */
