actor Lith_ManaPickupTrail
{
   Scale 0.4
   RenderStyle "Add"
   
   +NOTIMEFREEZE
   +NOINTERACTION
   
   states
   {
   Spawn:
      BLLT Q 0 bright A_SetScale(scalex * 0.9)
      BLLT Q 1 bright A_FadeOut(0.05)
      loop
   }
}

actor Lith_ManaPickup : CustomInventory
{
   RenderStyle "Add"
   Radius 4
   Height 4
   Scale 0.8
   Inventory.PickupSound "player/pickup/mana"
   Inventory.PickupMessage ""
   
   +INVENTORY.ALWAYSPICKUP
   +INVENTORY.TRANSFER
   +INVENTORY.NOSCREENFLASH
   +NOGRAVITY
   +SEEKERMISSILE
   
   var int user_deathwait;
   
   states
   {
   Spawn:
      BLLT Q 0
      BLLT Q 0 A_SetScale(scalex*frandom(0.5,1))
      BLLT Q 0 A_GiveInventory("Lith_MagicAmmo", random(5, 10))
      BLLT Q 0 ThrustThingZ(0, 16, 0, 1)
      BLLT Q 0 A_SetUserVar(user_deathwait, 35 * 15)
   SpawnLoop:
      BLLT Q 0 A_JumpIf(user_deathwait == 0, "Death")
      BLLT Q 0 A_SetUserVar(user_deathwait, user_deathwait - 1)
      BLLT Q 0 A_ChangeVelocity(16, 16, velz*0.9, CVF_REPLACE)
      BLLT Q 0 A_SpawnItemEx("Lith_ManaPickupTrail")
      BLLT Q 0 A_JumpIfTargetInLOS("Spawn1")
      goto Spawn2
   Spawn1:
      BLLT Q 0 A_SeekerMissile(360, 40, SMF_PRECISE|SMF_CURSPEED)
   Spawn2:
      BLLT Q 1 bright
      goto SpawnLoop
   Death:
      BLLT Q 1 bright A_FadeOut
      wait
   }
}

actor Lith_Clip : Lith_ScoreItem replaces Clip
{
   states
   {
   Spawn:
      SCOR A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_Clip)
      SCOR A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_clip)
      goto Super::Pickup
   }
}

actor Lith_ClipBox : Lith_ScoreItem replaces ClipBox
{
   states
   {
   Spawn:
      SCOR B 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_ClipBox)
      SCOR B -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_clipbox)
      goto Super::Pickup
   }
}

actor Lith_Shell : Lith_ScoreItem replaces Shell
{
   Inventory.PickupSound "player/pickup/shells"
   
   states
   {
   Spawn:
      SHEL A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_Shell)
      SHEL A 0 A_GiveInventory("Lith_ShellAmmo", AmmoAmt_Shell)
      SHEL A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_shell)
      goto Super::Pickup
   }
}

actor Lith_ShellBox : Lith_ScoreItem replaces ShellBox
{
   Inventory.PickupSound "player/pickup/shellb"
   
   states
   {
   Spawn:
      SBOX A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_ShellBox)
      SBOX A 0 A_GiveInventory("Lith_ShellAmmo", AmmoAmt_ShellBox)
      SBOX A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_shellbox)
      goto Super::Pickup
   }
}

actor Lith_RocketAmmoPickup : Lith_ScoreItem replaces RocketAmmo
{
   Inventory.PickupSound "player/pickup/rockets"
   
   states
   {
   Spawn:
      ROCK A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_Rocket)
      ROCK A 0 A_GiveInventory("Lith_RocketAmmo", AmmoAmt_Rocket)
      ROCK A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_rocket)
      goto Super::Pickup
   }
}

actor Lith_RocketBox : Lith_ScoreItem replaces RocketBox
{
   Inventory.PickupSound "player/pickup/rocketb"
   
   states
   {
   Spawn:
      BROK A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_RocketBox)
      BROK A 0 A_GiveInventory("Lith_RocketAmmo", AmmoAmt_RocketBox)
      BROK A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_rocketbox)
      goto Super::Pickup
   }
}

actor Lith_Cell : Lith_ScoreItem replaces Cell
{
   Inventory.PickupSound "player/pickup/cells"
   
   states
   {
   Spawn:
      CELL A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_Cell)
      CELL A 0 A_GiveInventory("Lith_PlasmaAmmo", AmmoAmt_Cell)
      CELL A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_cell)
      goto Super::Pickup
   }
}

actor Lith_CellPack : Lith_ScoreItem replaces CellPack
{
   Inventory.PickupSound "player/pickup/cellb"
   
   states
   {
   Spawn:
      CELP A 0 nodelay A_GiveInventory("Lith_ScoreCount", Score_CellPack)
      CELP A 0 A_GiveInventory("Lith_PlasmaAmmo", AmmoAmt_CellPack)
      BPAK A 0 A_GiveInventory("Lith_CannonAmmo", AmmoAmt_CannonPack)
      CELP A -1
      stop
   Pickup:
      TNT1 A 0 ACS_NamedExecuteAlways("Lith_LogName", 0, msg_cellbox)
      goto Super::Pickup
   }
}

// EOF

