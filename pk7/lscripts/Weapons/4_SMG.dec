actor Lith_SMGTrail
{
   RenderStyle "Add"
   Scale 0.3
   Alpha 0.5
   
   +NOINTERACTION
   
   states
   {
   Spawn:
      PUFF A 1 A_FadeOut(0.2)
      wait
   }
}

actor Lith_SMGTracer : FastProjectile
{
   MissileType "Lith_SMGTrail"
   MissileHeight 8
   RenderStyle "Translucent"
   Alpha 0.9
   Scale 0.5
   Radius 2
   Height 20
   Damage (0)
   Speed 128
   
   +NODAMAGE
   
   states
   {
   Spawn:
      TNT1 A 1
      wait
   }
}

actor Lith_SMGShotsFired : Inventory
{
   Inventory.MaxAmount 40
}

actor Lith_SMGHeat : Inventory
{
   Inventory.MaxAmount 500
}

actor Lith_SMG : Lith_CWeapon
{
   Tag "$LITH_TXT_INFO_SHORT_SMG"
   Weapon.UpSound "weapons/smg/draw"
   Weapon.SlotNumber 4
   Weapon.SlotPriority 1
   
   states
   {
   Spawn:
      TNT1 A 0
      TNT1 A 0 A_SpawnItemEx("Lith_ChaingunPickup", 0,0,0, 0,0,0, 0, Lith_PF)
      stop
   
   Ready:
      CRFG A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER1)
      loop
   
   Deselect:
      CRFG A 0 A_StopSound(CHAN_WEAPON)
   DeselectLoop:
      CRFG AAA 0 A_Lower
      CRFG A 1
      loop
   
   Select:
      CRFG AAA 0 A_Raise
      CRFG A 1
      loop
   
   Fire:
      TNT1 A 0 A_JumpIfInventory("Lith_SMGHeat", 0, "ReloadHeat")
      TNT1 A 0 A_JumpIfInventory("Lith_SMGShotsFired", 0, "Reload")
      TNT1 A 0 A_PlaySound("weapons/smg/fire", CHAN_WEAPON, 1, true)
   Fire1:
      CRFG A 0 A_GiveInventory("Lith_SMGHeat", 25)
      TNT1 A 0 A_JumpIfInventory("Lith_SMGHeat", 0, "ReloadHeatFromFiring")
      TNT1 A 0 A_JumpIfInventory("Lith_SMGShotsFired", 0, "ReloadFromFiring")
      TNT1 A 0 A_GunFlash("DummyFlash")
      TNT1 A 0 A_GiveInventory("Lith_SMGShotsFired", 1)
      TNT1 A 0 ACS_NamedExecuteWithResult("Lith_SetVar", 1, frandom(-2.885, 2.885)*FIX)
      TNT1 A 0 ACS_NamedExecuteWithResult("Lith_SetVar", 2, frandom(-1, 1)*FIX)
      TNT1 AA 0 A_FireCustomMissile("Lith_SMGTracer", CallACS("Lith_GetVar", 1)/FIX, false, 0, 0, 0, CallACS("Lith_GetVar", 2)/FIX)
      TNT1 AA 0 A_FireBullets(CallACS("Lith_GetVar", 1)/FIX, CallACS("Lith_GetVar", 2)/FIX, -1, 7, "Lith_RifleBulletPainless", FBF_NORANDOM|FBF_EXPLICITANGLE)
      CRFG BC 1 bright
      CRFG A 1
      CRFG A 1 A_ReFire("Fire1")
      CRFG A 0 A_StopSound(CHAN_WEAPON)
      CRFG A 0 A_PlaySound("weapons/smg/firedone", CHAN_5)
      goto Ready
   
   ReloadHeatFromFiring:
      CRFG A 0 A_StopSound(CHAN_WEAPON)
      CRFG A 0 A_PlaySound("weapons/smg/firedone", CHAN_5)
   
   User1:
   ReloadHeat:
      TNT1 A 0 A_JumpIfInventory("Lith_SMGHeat", 200, 1)
      goto Ready
      CRFG A 5
      CRFG A 7 A_PlaySound("weapons/smg/open", CHAN_6)
      CRFG A 2 A_PlaySound("weapons/smg/eject", CHAN_6)
      CRFG A 0 A_TakeInventory("Lith_SMGHeat", 999)
      CRFG A 35 A_PlaySound("weapons/smg/heat", CHAN_7)
      CRFG A 40 A_PlaySound("weapons/smg/insert", CHAN_6)
      CRFG A 10 A_PlaySound("weapons/smg/close", CHAN_6)
      goto Ready
   
   ReloadFromFiring:
      CRFG A 0 A_StopSound(CHAN_WEAPON)
      CRFG A 0 A_PlaySound("weapons/smg/firedone", CHAN_5)
   
   Reload:
      TNT1 A 0 A_JumpIfInventory("Lith_SMGShotsFired", 1, 1)
      goto Ready
      CRFG A 1
      CRFG A 1 offset(-2, 34)
      CRFG A 1 offset(-4, 37)
      CRFG A 1 offset(-9, 43) A_PlaySound("weapons/smg/magout", CHAN_6)
      CRFG A 1 offset(-12, 47)
      CRFG A 1 offset(-14, 52)
      CRFG A 2 offset(-12, 55)
      CRFG A 3 offset(-11, 57)
      CRFG A 8 offset(-10, 60)
      CRFG A 8 offset(-11, 60)
      CRFG A 0 A_TakeInventory("Lith_SMGShotsFired", 999)
      CRFG A 2 offset(-13, 59) A_PlaySound("weapons/smg/magin", CHAN_7)
      CRFG A 2 offset(-11, 49)
      CRFG A 2 offset(-11, 47)
      CRFG A 7 offset(-11, 45)
      CRFG A 1 offset(-12, 49)
      CRFG A 1 offset(-8, 53)
      CRFG A 1 offset(-1, 57)
      CRFG A 1 offset(3, 56)
      CRFG A 1 offset(8, 52)
      CRFG A 1 offset(10, 49)
      CRFG A 1 offset(8, 47)
      CRFG A 1 offset(7, 45)
      CRFG A 2 offset(5, 43)
      CRFG A 2 offset(3, 40)
      CRFG A 3 offset(2, 39)
      CRFG A 3 offset(1, 37)
      CRFG A 4 offset(1, 34)
      CRFG A 4
      goto Ready
   }
}

