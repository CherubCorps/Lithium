/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison G. Watson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_AnimItemSprite : Lith_ItemSprite
{
   default
   {
      +BRIGHT;
   }

   property Phases: m_Phases;

   meta int m_Phases;
   int m_Iter, m_Phase;

   action state Lith_A_JumpPhase()
      {return invoker.m_Phase == invoker.m_Iter++ ? ResolveState("Super::SpawnLoop") : null;}

   states
   {
   Spawn:
      TNT1 A 0 {m_Phase = random(0, m_Phases - 1);}
      goto Super::Spawn;
   SpawnLoop:
      TNT1 A 0 {
         m_Phase = (m_Phase + 1) % m_Phases;
         m_Iter = 0;
         return ResolveState("SetSpr");
      }
   }
}

class Lith_MagicSphereItemSprite : Lith_AnimItemSprite
   {states {Done: #### # 1 A_FadeOut; wait;}}

class Lith_ItemSprite : Actor;

default
{
   +NOINTERACTION
   +NOTIMEFREEZE
   +CastSpriteShadow
}

vector3 m_OrigPos;
int m_FAng;
int m_FZAng;

states
{
Spawn:
   #### # 0;
   #### # 0 {
      m_FAng  = random(0, 359);
      m_FZAng = random(0, 359);
      return ResolveState("SpawnLoop");
   }
   stop;
SpawnLoop:
   #### # 0 {
      if(!master || !master.bSPECIAL)
         return ResolveState("Done");
      else
         return state(null);
   }
   #### # 0 {
      m_FAng  = (m_FAng  + 2) % 360;
      m_FZAng = (m_FZAng + 3) % 360;
      m_OrigPos = pos;
   }
   #### # 1 bright A_Warp(AAPTR_MASTER, cos(m_FAng) * 4.0, sin(m_FAng) * 4.0, 16.0 + (sin(m_FZAng) * 12.0), 0.0, WARPF_NOCHECKPOSITION);
   #### # 0 {
      A_Warp(AAPTR_MASTER, m_OrigPos.x, m_OrigPos.y, m_OrigPos.z, 0, WARPF_ABSOLUTEPOSITION);
      return ResolveState("SpawnLoop");
   }
   stop;
Done:
   TNT1 A 0;
   stop;
}

/* EOF */
