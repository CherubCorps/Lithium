class Lith_JDJSmoke : Actor
{
   default
   {
      RenderStyle "Translucent";
      Alpha 0.7;
      Scale 0.3;

      +NOINTERACTION
   }

   states
   {
   Spawn:
      FHFX VVVVVUUUUUVVVUUUVVWWW random(2, 3);
      FHFX W 1 A_FadeOut;
      wait;
   }
}

class Lith_JDJTrail : Actor
{
   default
   {
      RenderStyle "Add";
      Scale 0.14;
      Alpha 0.7;

      +NOINTERACTION
   }

   states
   {
   Spawn:
      TNT1 A 0;
      TNT1 AAAAA 0 A_SpawnItemEx("Lith_JDJSmoke", frandom(-1,1),frandom(-1,1),frandom(-1,1), frandom(-0.8,0.8),frandom(-0.8,0.8),frandom(-0.4,0.4));
      BLLT K 10;
      BLLT K 1 A_FadeOut(0.02);
      wait;
   }
}

class Lith_FatMac : Lith_DWeapon;

default
{
   Tag "Fat Mac";
   Weapon.SlotNumber 6;
   Weapon.SlotPriority 1;
   +WEAPON.NOAUTOFIRE;
}

action(Weapon) void Lith_A_FireFatMac()
{
   A_GunFlash("DummyFlash");
   A_SetBlend("White", 0.3, 10);
   A_FireBullets(0, 0, -1, 100, "Lith_700Bullet", FBF_NORANDOM);
   A_RailAttack(400, 0, false, "", "White", RGF_SILENT, 4, sparsity: 20, spawnclass: "Lith_JDJTrail");
   A_PlaySound("weapons/fatmac/fire", CHAN_WEAPON);

   let vl = self.vel.xy.length();
   if(vl > 8)
   {
      self.A_DamageSelf(vl, 'FatMacRecoil');
      A_Recoil(vl * 5);

      if(random(0, 10000) == 0)
         Lith_HERMES.Log(self, msg_huds, 1, "This is my arm fucker");
   }
   else
      A_Recoil(5 + vl * 2);
}

states(Actor)
{
SpawnPickup:
   TNT1 A 0 Lith_A_SpawnPickup("Lith_RocketLauncherPickup");
   stop;
}

states(Weapon)
{
Ready:
   IONG A 1 Lith_A_Ready;
   loop;

Deselect:
   IONG AAA 0 A_Lower;
   IONG A 1;
   loop;

Select:
   IONG AAA 0 A_Raise;
   IONG A 1;
   loop;

FireEmpty:
   IONG A 1;
   IONG A 2 offset(0, 38);
   IONG A 1 offset(0, 40);
   IONG A 1 offset(0, 37) A_PlaySound("weapons/fatmac/empty", CHAN_5);
   IONG A 1 offset(0, 34);
   IONG A 1 offset(0, 33);
   IONG A 5 offset(0, 32);
   goto Ready;
Fire:
   TNT1 A 0 A_JumpIf(CountInv("Lith_PlasmaAmmo") < 700, "FireEmpty");
   TNT1 A 0 A_TakeInventory("Lith_PlasmaAmmo", 700);
   IONG B 1 bright offset(0, 50) Lith_A_FireFatMac;
   IONG C 1 bright offset(0, 46) Lith_A_RecoilUp(1.5);
   IONG A 1 offset(0, 43);
   IONG A 1 offset(0, 40);
   IONG A 1 offset(0, 39);
   IONG A 1 offset(0, 38);
   IONG A 1 offset(0, 36);
   IONG A 2 offset(0, 34);
   IONG A 2 offset(0, 33);
   IONG A 1 offset(0, 32);
   IONG A 0 Lith_A_RecoilDn(0.375);
   IONG A 1 offset(1, 32);
   IONG A 0 Lith_A_RecoilDn(0.375);
   IONG A 1 offset(3, 32);
   IONG A 0 Lith_A_RecoilDn(0.375);
   IONG A 1 offset(4, 32);
   IONG A 0 Lith_A_RecoilDn(0.375);
   IONG A 2 offset(8, 38);
   IONG A 3 offset(12, 45);
   IONG A 4 offset(16, 53);
   IONG A 10 offset(19, 60);
   IONG A 4 offset(21, 64);
   IONG A 2 offset(23, 67);
   IONG A 2 offset(22, 74) A_PlaySound("weapons/fatmac/boltback", CHAN_5);
   IONG A 4 offset(19, 78);
   IONG A 20 offset(18, 80);
   IONG A 3 offset(17, 74) A_PlaySound("weapons/fatmac/boltforward", CHAN_6);
   IONG A 3 offset(19, 67);
   IONG A 2 offset(20, 66);
   IONG A 2 offset(21, 62);
   IONG A 2 offset(20, 60);
   IONG A 2 offset(21, 63);
   IONG A 2 offset(23, 66);
   IONG A 1 offset(24, 68);
   IONG A 1 offset(25, 63);
   IONG A 1 offset(24, 59);
   IONG A 1 offset(22, 57);
   IONG A 1 offset(20, 54);
   IONG A 2 offset(16, 49);
   IONG A 2 offset(12, 44);
   IONG A 2 offset(10, 42);
   IONG A 2 offset(8, 40);
   IONG A 3 offset(5, 38);
   IONG A 3 offset(2, 35);
   IONG A 5 offset(0, 32) A_WeaponReady(LITH_BOBONLY);
   goto Ready;
}

// EOF
