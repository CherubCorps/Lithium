actor Lith_MinigunWindup : Inventory
{
   Inventory.MaxAmount 30
}

actor Lith_MinigunWinddown : Inventory
{
   Inventory.MaxAmount 1
}

actor Lith_MinigunFireFrame : Inventory
{
   Inventory.MaxAmount 3
}

// This weapon is a clusterfuck because ZDoom doesn't allow uservars on weapons.
// Also because I'm bad at programming when I'm very tired.
// I apologize to anyone who needs to read this.
actor Lith_Minigun : Lith_Weapon
{
   Tag "Minigun"
   Inventory.PickupMessage "You got the Mnegubn!"
   Weapon.SlotNumber 4
   Weapon.BobStyle Smooth
   
   const float WM   = 30.0;
   const int   WMI  = 30;
   const float WM10 = 10.0;
   
   states
   {
   Ready:
      MNGG A 1 A_WeaponReady
      wait
   Deselect:
      MNGG A 0 A_TakeInventory("Lith_MinigunWindup", 999)
      MNGG A 0 A_TakeInventory("Lith_MinigunWinddown", 999)
   DeselectLoop:
      MNGG A 1 { A_Lower; A_Lower; }
      loop
   Select:
      MNGG A 1 { A_Raise; A_Raise; }
      loop
   AltFire:
      MNGG A 0 A_JumpIf(CountInv("Lith_MinigunWinddown"), "FireLoopContinue")
      MNGG A 0 A_JumpIf(CountInv("Lith_MinigunWindup"), "FireLoop")
      MNGG A 0 A_PlaySound("weapons/minigun/click", 6)
      MNGG A 0 A_PlaySound("weapons/minigun/up", 7)
      MNGG D 1 bright {
         A_FireBullets(4, 1, 2, 5, "BulletPuff");
         A_FireCustomMissile("Lith_GunSmokeSpawnerSmall", 0, 0, 2, 6);
         A_PlaySound("weapons/minigun/fire", CHAN_WEAPON);
         A_Recoil(0.1);
         A_WeaponReady(LITH_BOBONLY);
      }
      MNGG AABBBCCCAAABBBCCC 1 A_WeaponReady(LITH_BOBONLY)
      MNGG A 0 A_PlaySound("weapons/minigun/rotate", 7, 1.0, true)
      goto FireLoop
   FireLoopContinue:
      MNGG A 0 A_PlaySound("weapons/minigun/click", 6)
      MNGG A 0 A_PlaySound("weapons/minigun/rotate", 7, 1.0, true)
      MNGG A 0 A_TakeInventory("Lith_MinigunWinddown", 1)
   FireLoop:
      MNGG D 0 bright {
         A_FireBullets(
            CallACS("Lith_CircleSpread",
               floor(5.0 * (CountInv("Lith_MinigunWindup") / WM)) * IFIX,
               floor(2.0 * (CountInv("Lith_MinigunWindup") / WM)) * IFIX,
               false) / FIX,
            CallACS("Lith_CircleSpread", 0, 0, true) / FIX,
            1, 7, "BulletPuff", FBF_EXPLICITANGLE | FBF_USEAMMO);
         A_FireCustomMissile("Lith_GunSmokeSpawnerSmall", 0, 0, 2, 6);
         A_Recoil(0.1);
         
         A_TakeInventory("Lith_MinigunFireFrame", 999);
         A_GiveInventory("Lith_MinigunFireFrame",
            CallACS("Lith_SuperOmegaRandom", 1, 3));
         
         if(CountInv("Lith_MinigunWindup") > 27)
         {
            A_PlaySound("weapons/minigun/fire1", CHAN_WEAPON);
         }
         else if(CountInv("Lith_MinigunWindup") > 17)
         {
            A_PlaySound("weapons/minigun/fire2", CHAN_WEAPON);
         }
         else
         {
            A_PlaySound("weapons/minigun/fire", CHAN_WEAPON);
         }
         
         A_WeaponReady(LITH_BOBONLY);
      }
      MNGG D 1 bright A_SetTics(CountInv("Lith_MinigunFireFrame") == 1)
      MNGG A 1 { A_SetTics(((WM - CountInv("Lith_MinigunWindup")) / WM10)
                           + (CountInv("Lith_MinigunFireFrame") == 1));
                 A_WeaponReady(LITH_BOBONLY); }
      MNGG E 1 bright A_SetTics(CountInv("Lith_MinigunFireFrame") == 2)
      MNGG B 1 { A_SetTics(((WM - CountInv("Lith_MinigunWindup")) / WM10)
                           + (CountInv("Lith_MinigunFireFrame") == 2));
                 A_WeaponReady(LITH_BOBONLY); }
      MNGG F 1 bright A_SetTics(CountInv("Lith_MinigunFireFrame") == 3)
      MNGG C 1 { A_SetTics(((WM - CountInv("Lith_MinigunWindup")) / WM10)
                           + (CountInv("Lith_MinigunFireFrame") == 3));
                 A_WeaponReady(LITH_BOBONLY); }
      MNGG A 0 {
         A_GiveInventory("Lith_MinigunWindup",
            CallACS("Lith_SuperOmegaRandom", 0, 2));
         A_GiveInventory("Lith_MinigunWindup",
            (WMI - CountInv("Lith_MinigunWindup")) / WM10);
         A_ReFire;
      }
   WindDownStart:
      MNGG A 0 A_GiveInventory("Lith_MinigunWinddown", 1)
      MNGG A 0 A_PlaySound("weapons/minigun/down", 7)
   WindDown:
      MNGG ABC 1 {
         A_SetTics((WM - CountInv("Lith_MinigunWindup")) / (WM10 * 0.7) + 1);
         A_ReFire;
         A_WeaponReady(WRF_NOFIRE);
      }
      MNGG C 0 A_JumpIf(CountInv("Lith_MinigunWindup") == 0, "WindDownDone")
      MNGG C 0 A_TakeInventory("Lith_MinigunWindup", 3)
      loop
   Fire:
      MNGG A 0 A_PlaySound("weapons/minigun/click", 6)
      MNGG A 0 A_PlaySound("weapons/minigun/up", 7)
      MNGG ABC 2 A_WeaponReady(LITH_BOBONLY)
      MNGG A 0 A_PlaySound("weapons/minigun/rotate", 7, 1.0, true)
      goto AltFireLoop
   AltRefire:
      MNGG A 0 A_PlaySound("weapons/minigun/click", 6)
      MNGG A 0 A_PlaySound("weapons/minigun/rotate", 7, 1.0, true)
   AltFireLoop:
      MNGG D 1 bright {
         A_FireBullets(frandom(-5.0, 5.0), 0.0,
            1, 7, "BulletPuff", FBF_EXPLICITANGLE | FBF_USEAMMO);
         A_FireCustomMissile("Lith_GunSmokeSpawnerSmall", 0, 0, 2, 6);
         A_Recoil(0.1);
         A_PlaySound("weapons/minigun/fire", CHAN_WEAPON);
         A_WeaponReady(LITH_BOBONLY);
      }
      MNGG B 2 A_WeaponReady(LITH_BOBONLY)
      MNGG C 1 A_WeaponReady(LITH_BOBONLY)
      MNGG C 0 A_ReFire("AltFireLoop")
      MNGG A 0 A_PlaySound("weapons/minigun/down", 7)
      MNGG ABCABCABC 3 { A_ReFire("AltRefire"); A_WeaponReady(LITH_BOBONLY); }
   WindDownDone:
      MNGG A 0 A_PlaySound("weapons/minigun/place", 5)
      MNGG A 0 A_TakeInventory("Lith_MinigunWinddown", 1)
      goto Ready
   }
}

