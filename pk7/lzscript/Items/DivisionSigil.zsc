/* ---------------------------------------------------------------------------|
 *
 * Distributed under the CC0 public domain license.
 * By Alison Sanderson. Attribution is encouraged, though not required.
 * See licenses/cc0.txt for more information.
 *
 * ---------------------------------------------------------------------------|
 */

class Lith_DivisionSigilSprite : Lith_AnimItemSprite {
   default {
      Lith_AnimItemSprite.Phases 23;
      +BRIGHT
   }

   states(Actor) {
   SetSpr:
      DIVI ABCDEFGHIJKLMNOPQRSTUVW 0 Lith_A_JumpPhase;
      stop;
   }
}

class Lith_DivisionSigil : Lith_ItemPickup {
   default {
      Tag "Division Sigil";
      Lith_InventoryItem.InvName "DivisionSigil";
      Lith_InventoryItem.Size 3, 3;
      +LITH_ITEMPICKUP.PKUP_NOSPRITE
   }

   override void postBeginPlay() {
      super.postBeginPlay();
      spawn("Lith_DivisionSigilSprite", pos).master = self;
   }

   override bool canPickup(Actor mo) {
      if(super.canPickup(mo)) {
         return !ACS_ExecuteWithResult(lsc_pdata, pdata_hassigil);
      } else {
         return false;
      }
   }

   override bool tryPickup(in out Actor mo) {
      mo.A_StartSound("player/getsigil", lch_body3, attenuation: ATTN_NONE);
      mo.acs_scriptCall("Lith_GetSigil");
      return super.tryPickup(mo);
   }
}

class Lith_ClawOfImp : Lith_ItemPickup {
   default {
      Tag "Claw of Imp";
      Lith_InventoryItem.InvName "ClawOfImp";
      Lith_InventoryItem.Size 4, 2;
      Lith_InventoryItem.InvSell 2000;
      Lith_ItemPickup.Sprite "DITMA";
      +LITH_ITEMPICKUP.PKUP_GENERIC
   }
}

class Lith_ItemPickup : Lith_InventoryItem abstract;

mixin Lith_Pickup;

default {
   Inventory.PickupSound "player/pickup/evil";
   Lith_InventoryItem.InvEquip _cont_store;
   Lith_ItemPickup.Glow "Lith_ItemGlow";
}

override void postBeginPlay() {
   super.postBeginPlay();
   Lith_PickupPostBeginPlay();
}

override void tick() {
   super.tick();
   Lith_PickupTick();
}

/* EOF */
